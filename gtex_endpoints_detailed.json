[
  {
    "path": "/api/v2/",
    "method": "GET",
    "summary": "Get Service Info",
    "description": "General information about the GTEx service.",
    "operation_id": "get_service_info_api_v2__get",
    "tags": [
      "GTEx Portal API Info"
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/ServiceInfo"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/admin/maintenanceMessage",
    "method": "GET",
    "summary": "Get Maintenance Message",
    "description": "Getting all the maintenance messages from the database that are enabled",
    "operation_id": "get_maintenance_message_api_v2_admin_maintenanceMessage_get",
    "tags": [
      "Admin Endpoints"
    ],
    "parameters": [
      {
        "name": "page",
        "location": "query",
        "required": false,
        "description": "The 0-based numeric ID of the page to retrieve",
        "schema": {
          "type": "integer",
          "maximum": 1000000,
          "minimum": 0,
          "description": "The 0-based numeric ID of the page to retrieve",
          "default": 0,
          "title": "Page"
        },
        "type": "integer",
        "default": 0,
        "minimum": 0,
        "maximum": 1000000,
        "enum": []
      },
      {
        "name": "itemsPerPage",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "integer",
          "maximum": 100000,
          "minimum": 1,
          "default": 250,
          "title": "Itemsperpage"
        },
        "type": "integer",
        "default": 250,
        "minimum": 1,
        "maximum": 100000,
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/PaginatedResponse_MaintenanceMessage_"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/admin/newsItem",
    "method": "GET",
    "summary": "Get News Item",
    "description": "Getting all the news items from the database that are current",
    "operation_id": "get_news_item_api_v2_admin_newsItem_get",
    "tags": [
      "Admin Endpoints"
    ],
    "parameters": [
      {
        "name": "page",
        "location": "query",
        "required": false,
        "description": "The 0-based numeric ID of the page to retrieve",
        "schema": {
          "type": "integer",
          "maximum": 1000000,
          "minimum": 0,
          "description": "The 0-based numeric ID of the page to retrieve",
          "default": 0,
          "title": "Page"
        },
        "type": "integer",
        "default": 0,
        "minimum": 0,
        "maximum": 1000000,
        "enum": []
      },
      {
        "name": "itemsPerPage",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "integer",
          "maximum": 100000,
          "minimum": 1,
          "default": 250,
          "title": "Itemsperpage"
        },
        "type": "integer",
        "default": 250,
        "minimum": 1,
        "maximum": 100000,
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/PaginatedResponse_NewsItem_"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/association/egene",
    "method": "GET",
    "summary": "Get Eqtl Genes",
    "description": "Retrieve eGenes (eQTL Genes).\n\n- This service returns eGenes (eQTL Genes) from the specified dataset.\n- eGenes are genes that have at least one significant cis-eQTL acting upon them.\n- Results may be filtered by tissue. By default, the service queries the latest GTEx release.\n\nFor each eGene, the results include the allelic fold change (log2AllelicFoldChange), p-value (pValue),\np-value threshold (pValueThreshold), empirical p-value (empiricalPValue), and q-value (qValue).\n\n- The log2AllelicFoldChange is the allelic fold change (in log2 scale) of the most significant eQTL.\n- The pValue is the nominal p-value of the most significant eQTL.\n- The pValueThreshold is the p-value threshold used to determine whether a cis-eQTL for this gene is  significant.\nFor more details see https://gtexportal.org/home/documentationPage#staticTextAnalysisMethods.\n- The empiricalPValue is the beta distribution-adjusted empirical p-value from FastQTL.\n- The qValues were calculated based on the empirical p-values. A false discovery rate (FDR) threshold of <= 0.05\nwas applied to identify genes with a significant eQTL.",
    "operation_id": "get_eqtl_genes_api_v2_association_egene_get",
    "tags": [
      "Static Association Endpoints"
    ],
    "parameters": [
      {
        "name": "tissueSiteDetailId",
        "location": "query",
        "required": false,
        "description": "A list of Tissue IDs of the tissue(s) of interest. Can be a GTEx specific ID or an Ontology ID",
        "schema": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TissueSiteDetailId"
              },
              {
                "$ref": "#/components/schemas/TissueSiteOntologyId"
              }
            ]
          },
          "description": "A list of Tissue IDs of the tissue(s) of interest. Can be a GTEx specific ID or an Ontology ID",
          "title": "Tissuesitedetailid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "datasetId",
        "location": "query",
        "required": false,
        "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
        "schema": {
          "$ref": "#/components/schemas/DatasetId",
          "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
          "default": "gtex_v8"
        },
        "type": "",
        "default": "gtex_v8",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "page",
        "location": "query",
        "required": false,
        "description": "The 0-based numeric ID of the page to retrieve",
        "schema": {
          "type": "integer",
          "maximum": 1000000,
          "minimum": 0,
          "description": "The 0-based numeric ID of the page to retrieve",
          "default": 0,
          "title": "Page"
        },
        "type": "integer",
        "default": 0,
        "minimum": 0,
        "maximum": 1000000,
        "enum": []
      },
      {
        "name": "itemsPerPage",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "integer",
          "maximum": 100000,
          "minimum": 1,
          "default": 250,
          "title": "Itemsperpage"
        },
        "type": "integer",
        "default": 250,
        "minimum": 1,
        "maximum": 100000,
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/PaginatedResponse_EqtlGene_"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/association/fineMapping",
    "method": "GET",
    "summary": "Get Fine Mapping",
    "description": "Retrieve Fine Mapping Data\n\n- Finds and returns `Fine Mapping` data for the provided list of genes\n- By default, this endpoint fetches data from the latest `GTEx` version\n\nThe retrieved data is split into pages with `items_per_page` entries per page",
    "operation_id": "get_fine_mapping_api_v2_association_fineMapping_get",
    "tags": [
      "Static Association Endpoints"
    ],
    "parameters": [
      {
        "name": "gencodeId",
        "location": "query",
        "required": true,
        "description": "A list of Versioned GENCODE IDs, e.g. ENSG00000065613.9,ENSG00000203782.5",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "maxItems": 60000,
          "description": "A list of Versioned GENCODE IDs, e.g. ENSG00000065613.9,ENSG00000203782.5",
          "title": "Gencodeid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "datasetId",
        "location": "query",
        "required": false,
        "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
        "schema": {
          "$ref": "#/components/schemas/DatasetId",
          "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
          "default": "gtex_v8"
        },
        "type": "",
        "default": "gtex_v8",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "variantId",
        "location": "query",
        "required": false,
        "description": "A gtex variant ID",
        "schema": {
          "type": "string",
          "description": "A gtex variant ID",
          "title": "Variantid"
        },
        "type": "string",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "tissueSiteDetailId",
        "location": "query",
        "required": false,
        "description": "A list of Tissue IDs of the tissue(s) of interest. Can be a GTEx specific ID or an Ontology ID",
        "schema": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TissueSiteDetailId"
              },
              {
                "$ref": "#/components/schemas/TissueSiteOntologyId"
              }
            ]
          },
          "description": "A list of Tissue IDs of the tissue(s) of interest. Can be a GTEx specific ID or an Ontology ID",
          "title": "Tissuesitedetailid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "page",
        "location": "query",
        "required": false,
        "description": "The 0-based numeric ID of the page to retrieve",
        "schema": {
          "type": "integer",
          "maximum": 1000000,
          "minimum": 0,
          "description": "The 0-based numeric ID of the page to retrieve",
          "default": 0,
          "title": "Page"
        },
        "type": "integer",
        "default": 0,
        "minimum": 0,
        "maximum": 1000000,
        "enum": []
      },
      {
        "name": "itemsPerPage",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "integer",
          "maximum": 100000,
          "minimum": 1,
          "default": 250,
          "title": "Itemsperpage"
        },
        "type": "integer",
        "default": 250,
        "minimum": 1,
        "maximum": 100000,
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/PaginatedResponse_FineMapping_"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/association/independentEqtl",
    "method": "GET",
    "summary": "Get Independent Eqtl",
    "description": "Retrieve Independent eQTL Data\n\n- Finds and returns `Independent eQTL Data` data for the provided list of genes\n- By default, this endpoint fetches data from the latest `GTEx` version\n\nThe retrieved data is split into pages with `items_per_page` entries per page",
    "operation_id": "get_independent_eqtl_api_v2_association_independentEqtl_get",
    "tags": [
      "Static Association Endpoints"
    ],
    "parameters": [
      {
        "name": "gencodeId",
        "location": "query",
        "required": true,
        "description": "A list of Versioned GENCODE IDs, e.g. ENSG00000065613.9,ENSG00000203782.5",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "maxItems": 60000,
          "description": "A list of Versioned GENCODE IDs, e.g. ENSG00000065613.9,ENSG00000203782.5",
          "title": "Gencodeid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "tissueSiteDetailId",
        "location": "query",
        "required": false,
        "description": "A list of Tissue IDs of the tissue(s) of interest. Can be a GTEx specific ID or an Ontology ID",
        "schema": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TissueSiteDetailId"
              },
              {
                "$ref": "#/components/schemas/TissueSiteOntologyId"
              }
            ]
          },
          "description": "A list of Tissue IDs of the tissue(s) of interest. Can be a GTEx specific ID or an Ontology ID",
          "title": "Tissuesitedetailid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "datasetId",
        "location": "query",
        "required": false,
        "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
        "schema": {
          "$ref": "#/components/schemas/DatasetId",
          "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
          "default": "gtex_v8"
        },
        "type": "",
        "default": "gtex_v8",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "page",
        "location": "query",
        "required": false,
        "description": "The 0-based numeric ID of the page to retrieve",
        "schema": {
          "type": "integer",
          "maximum": 1000000,
          "minimum": 0,
          "description": "The 0-based numeric ID of the page to retrieve",
          "default": 0,
          "title": "Page"
        },
        "type": "integer",
        "default": 0,
        "minimum": 0,
        "maximum": 1000000,
        "enum": []
      },
      {
        "name": "itemsPerPage",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "integer",
          "maximum": 100000,
          "minimum": 1,
          "default": 250,
          "title": "Itemsperpage"
        },
        "type": "integer",
        "default": 250,
        "minimum": 1,
        "maximum": 100000,
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/PaginatedResponse_IndependentEqtl_"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/association/metasoft",
    "method": "GET",
    "summary": "Get Multi Tissue Eqtls",
    "description": "Find multi-tissue eQTL `Metasoft` results.\n\n- This service returns multi-tissue eQTL Metasoft results for a given gene and variant in a specified dataset.\n- A Versioned GENCODE ID must be provided.\n- For each tissue, the results include: m-value (mValue), normalized effect size (nes), p-value (pValue),\nand standard error (se).\n- The m-value is the posterior probability that an eQTL effect exists in each tissue tested in the cross-tissue\nmeta-analysis (Han and Eskin, PLoS Genetics 8(3): e1002555, 2012).\n- The normalized effect size is the slope of the linear regression of normalized expression data versus the three\ngenotype categories using single-tissue eQTL analysis, representing eQTL effect size.\n- The p-value is from a t-test that compares observed NES from single-tissue eQTL analysis to a null NES of 0.\n\nBy default, the service queries the latest GTEx release. The retrieved data is split into pages\nwith `items_per_page` entries per page",
    "operation_id": "get_multi_tissue_eqtls_api_v2_association_metasoft_get",
    "tags": [
      "Static Association Endpoints"
    ],
    "parameters": [
      {
        "name": "gencodeId",
        "location": "query",
        "required": true,
        "description": "A Versioned GENCODE ID of a gene, e.g. ENSG00000065613.9",
        "schema": {
          "type": "string",
          "description": "A Versioned GENCODE ID of a gene, e.g. ENSG00000065613.9",
          "title": "Gencodeid"
        },
        "type": "string",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "variantId",
        "location": "query",
        "required": false,
        "description": "A gtex variant ID",
        "schema": {
          "type": "string",
          "description": "A gtex variant ID",
          "title": "Variantid"
        },
        "type": "string",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "datasetId",
        "location": "query",
        "required": false,
        "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
        "schema": {
          "$ref": "#/components/schemas/DatasetId",
          "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
          "default": "gtex_v8"
        },
        "type": "",
        "default": "gtex_v8",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "page",
        "location": "query",
        "required": false,
        "description": "The 0-based numeric ID of the page to retrieve",
        "schema": {
          "type": "integer",
          "maximum": 1000000,
          "minimum": 0,
          "description": "The 0-based numeric ID of the page to retrieve",
          "default": 0,
          "title": "Page"
        },
        "type": "integer",
        "default": 0,
        "minimum": 0,
        "maximum": 1000000,
        "enum": []
      },
      {
        "name": "itemsPerPage",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "integer",
          "maximum": 100000,
          "minimum": 1,
          "default": 250,
          "title": "Itemsperpage"
        },
        "type": "integer",
        "default": 250,
        "minimum": 1,
        "maximum": 100000,
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/PaginatedResponse_MetaSoft_"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/association/sgene",
    "method": "GET",
    "summary": "Get Sqtl Genes",
    "description": "Retrieve sGenes (sQTL Genes).\n\n- This service returns sGenes (sQTL Genes) from the specified dataset.\n- Results may be filtered by tissue.\n- By default, the service queries the latest GTEx release.\n\nThe retrieved data is split into pages with `items_per_page` entries per page",
    "operation_id": "get_sqtl_genes_api_v2_association_sgene_get",
    "tags": [
      "Static Association Endpoints"
    ],
    "parameters": [
      {
        "name": "tissueSiteDetailId",
        "location": "query",
        "required": false,
        "description": "A list of Tissue IDs of the tissue(s) of interest. Can be a GTEx specific ID or an Ontology ID",
        "schema": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TissueSiteDetailId"
              },
              {
                "$ref": "#/components/schemas/TissueSiteOntologyId"
              }
            ]
          },
          "description": "A list of Tissue IDs of the tissue(s) of interest. Can be a GTEx specific ID or an Ontology ID",
          "title": "Tissuesitedetailid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "datasetId",
        "location": "query",
        "required": false,
        "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
        "schema": {
          "$ref": "#/components/schemas/DatasetId",
          "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
          "default": "gtex_v8"
        },
        "type": "",
        "default": "gtex_v8",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "page",
        "location": "query",
        "required": false,
        "description": "The 0-based numeric ID of the page to retrieve",
        "schema": {
          "type": "integer",
          "maximum": 1000000,
          "minimum": 0,
          "description": "The 0-based numeric ID of the page to retrieve",
          "default": 0,
          "title": "Page"
        },
        "type": "integer",
        "default": 0,
        "minimum": 0,
        "maximum": 1000000,
        "enum": []
      },
      {
        "name": "itemsPerPage",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "integer",
          "maximum": 100000,
          "minimum": 1,
          "default": 250,
          "title": "Itemsperpage"
        },
        "type": "integer",
        "default": 250,
        "minimum": 1,
        "maximum": 100000,
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/PaginatedResponse_SGene_"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/association/singleTissueEqtl",
    "method": "GET",
    "summary": "Get Significant Single Tissue Eqtls",
    "description": "Find significant single tissue eQTLs.\n\n- This service returns precomputed significant single tissue eQTLs.\n- Results may be filtered by tissue, gene, variant or dataset.\n- To search by gene, use the versioned GENCODE ID.\n- To search by variant, use the dbSNP rs ID (snpId).\n\nBy default, the service queries the latest GTEx release and the retrieved data is split\ninto pages with `items_per_page` entries per page",
    "operation_id": "get_significant_single_tissue_eqtls_api_v2_association_singleTissueEqtl_get",
    "tags": [
      "Static Association Endpoints"
    ],
    "parameters": [
      {
        "name": "gencodeId",
        "location": "query",
        "required": false,
        "description": "A list of Versioned GENCODE IDs, e.g. ENSG00000065613.9,ENSG00000203782.5",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "maxItems": 60000,
          "description": "A list of Versioned GENCODE IDs, e.g. ENSG00000065613.9,ENSG00000203782.5",
          "title": "Gencodeid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "variantId",
        "location": "query",
        "required": false,
        "description": "A list of GTEx variant IDs",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of GTEx variant IDs",
          "title": "Variantid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "tissueSiteDetailId",
        "location": "query",
        "required": false,
        "description": "A list of Tissue IDs of the tissue(s) of interest. Can be a GTEx specific ID or an Ontology ID",
        "schema": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TissueSiteDetailId"
              },
              {
                "$ref": "#/components/schemas/TissueSiteOntologyId"
              }
            ]
          },
          "description": "A list of Tissue IDs of the tissue(s) of interest. Can be a GTEx specific ID or an Ontology ID",
          "title": "Tissuesitedetailid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "datasetId",
        "location": "query",
        "required": false,
        "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
        "schema": {
          "$ref": "#/components/schemas/DatasetId",
          "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
          "default": "gtex_v8"
        },
        "type": "",
        "default": "gtex_v8",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "page",
        "location": "query",
        "required": false,
        "description": "The 0-based numeric ID of the page to retrieve",
        "schema": {
          "type": "integer",
          "maximum": 1000000,
          "minimum": 0,
          "description": "The 0-based numeric ID of the page to retrieve",
          "default": 0,
          "title": "Page"
        },
        "type": "integer",
        "default": 0,
        "minimum": 0,
        "maximum": 1000000,
        "enum": []
      },
      {
        "name": "itemsPerPage",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "integer",
          "maximum": 100000,
          "minimum": 1,
          "default": 250,
          "title": "Itemsperpage"
        },
        "type": "integer",
        "default": 250,
        "minimum": 1,
        "maximum": 100000,
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/PaginatedResponse_SingleTissueEqtl_"
            }
          }
        ]
      },
      {
        "status_code": "400",
        "description": "Unable Process Request",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/Message"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/association/singleTissueEqtlByLocation",
    "method": "GET",
    "summary": "Get Significant Single Tissue Eqtls By Location",
    "description": "Find significant single tissue eQTLs using Chromosomal Locations.\n\n- This service returns precomputed significant single tissue eQTLs.\n- Results may be filtered by tissue, and/or dataset.\n\nBy default, the service queries the latest GTEx release. Since this endpoint is used to support a \nthird party program on the portal, the return structure is different from other endpoints and is\nnot paginated.",
    "operation_id": "get_significant_single_tissue_eqtls_by_location_api_v2_association_singleTissueEqtlByLocation_get",
    "tags": [
      "Static Association Endpoints"
    ],
    "parameters": [
      {
        "name": "tissueSiteDetailId",
        "location": "query",
        "required": true,
        "description": "The ID of the tissue of interest. Can be a GTEx specific ID or an Ontology ID",
        "schema": {
          "$ref": "#/components/schemas/TissueSiteDetailId",
          "description": "The ID of the tissue of interest. Can be a GTEx specific ID or an Ontology ID"
        },
        "type": "",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "start",
        "location": "query",
        "required": true,
        "description": "",
        "schema": {
          "type": "integer",
          "maximum": 250000000,
          "minimum": 0,
          "title": "Start"
        },
        "type": "integer",
        "default": "",
        "minimum": 0,
        "maximum": 250000000,
        "enum": []
      },
      {
        "name": "end",
        "location": "query",
        "required": true,
        "description": "",
        "schema": {
          "type": "integer",
          "maximum": 250000000,
          "minimum": 0,
          "title": "End"
        },
        "type": "integer",
        "default": "",
        "minimum": 0,
        "maximum": 250000000,
        "enum": []
      },
      {
        "name": "chromosome",
        "location": "query",
        "required": true,
        "description": "Chromosome to Query",
        "schema": {
          "$ref": "#/components/schemas/Chromosome",
          "description": "Chromosome to Query"
        },
        "type": "",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "datasetId",
        "location": "query",
        "required": false,
        "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
        "schema": {
          "$ref": "#/components/schemas/DatasetId",
          "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
          "default": "gtex_v8"
        },
        "type": "",
        "default": "gtex_v8",
        "minimum": "",
        "maximum": "",
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/IGVResponse"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/association/singleTissueSqtl",
    "method": "GET",
    "summary": "Get Significant Single Tissue Sqtls",
    "description": "Retrieve Single Tissue sQTL Data.\n\n- This service returns single tissue sQTL data for the given genes, from a specified dataset.\n- Results may be filtered by tissue\n- By default, the service queries the latest GTEx release.\n\nThe retrieved data is split into pages with `items_per_page` entries per page",
    "operation_id": "get_significant_single_tissue_sqtls_api_v2_association_singleTissueSqtl_get",
    "tags": [
      "Static Association Endpoints"
    ],
    "parameters": [
      {
        "name": "gencodeId",
        "location": "query",
        "required": false,
        "description": "A list of Versioned GENCODE IDs, e.g. ENSG00000065613.9,ENSG00000203782.5",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "maxItems": 60000,
          "description": "A list of Versioned GENCODE IDs, e.g. ENSG00000065613.9,ENSG00000203782.5",
          "title": "Gencodeid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "variantId",
        "location": "query",
        "required": false,
        "description": "A list of GTEx variant IDs",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of GTEx variant IDs",
          "title": "Variantid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "tissueSiteDetailId",
        "location": "query",
        "required": false,
        "description": "A list of Tissue IDs of the tissue(s) of interest. Can be a GTEx specific ID or an Ontology ID",
        "schema": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TissueSiteDetailId"
              },
              {
                "$ref": "#/components/schemas/TissueSiteOntologyId"
              }
            ]
          },
          "description": "A list of Tissue IDs of the tissue(s) of interest. Can be a GTEx specific ID or an Ontology ID",
          "title": "Tissuesitedetailid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "datasetId",
        "location": "query",
        "required": false,
        "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
        "schema": {
          "$ref": "#/components/schemas/DatasetId",
          "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
          "default": "gtex_v8"
        },
        "type": "",
        "default": "gtex_v8",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "page",
        "location": "query",
        "required": false,
        "description": "The 0-based numeric ID of the page to retrieve",
        "schema": {
          "type": "integer",
          "maximum": 1000000,
          "minimum": 0,
          "description": "The 0-based numeric ID of the page to retrieve",
          "default": 0,
          "title": "Page"
        },
        "type": "integer",
        "default": 0,
        "minimum": 0,
        "maximum": 1000000,
        "enum": []
      },
      {
        "name": "itemsPerPage",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "integer",
          "maximum": 100000,
          "minimum": 1,
          "default": 250,
          "title": "Itemsperpage"
        },
        "type": "integer",
        "default": 250,
        "minimum": 1,
        "maximum": 100000,
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/PaginatedResponse_SingleTissueSqtl_"
            }
          }
        ]
      },
      {
        "status_code": "400",
        "description": "Unable Process Request",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/Message"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/association/singleTissueIEqtl",
    "method": "GET",
    "summary": "Get Significant Single Tissue Ieqtls",
    "description": "Retrieve Interaction eQTL Data.\n\n- This service returns cell type interaction eQTLs (ieQTLs), from a specified dataset.\n- Results may be filtered by tissue\n- By default, the service queries the latest GTEx release.\n\nThe retrieved data is split into pages with `items_per_page` entries per page",
    "operation_id": "get_significant_single_tissue_ieqtls_api_v2_association_singleTissueIEqtl_get",
    "tags": [
      "Static Association Endpoints"
    ],
    "parameters": [
      {
        "name": "gencodeId",
        "location": "query",
        "required": false,
        "description": "A list of Versioned GENCODE IDs, e.g. ENSG00000065613.9,ENSG00000203782.5",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "maxItems": 60000,
          "description": "A list of Versioned GENCODE IDs, e.g. ENSG00000065613.9,ENSG00000203782.5",
          "title": "Gencodeid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "variantId",
        "location": "query",
        "required": false,
        "description": "A list of GTEx variant IDs",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of GTEx variant IDs",
          "title": "Variantid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "tissueSiteDetailId",
        "location": "query",
        "required": false,
        "description": "A list of Tissue IDs of the tissue(s) of interest. Can be a GTEx specific ID or an Ontology ID",
        "schema": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TissueSiteDetailId"
              },
              {
                "$ref": "#/components/schemas/TissueSiteOntologyId"
              }
            ]
          },
          "description": "A list of Tissue IDs of the tissue(s) of interest. Can be a GTEx specific ID or an Ontology ID",
          "title": "Tissuesitedetailid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "datasetId",
        "location": "query",
        "required": false,
        "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
        "schema": {
          "$ref": "#/components/schemas/DatasetId",
          "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
          "default": "gtex_v8"
        },
        "type": "",
        "default": "gtex_v8",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "page",
        "location": "query",
        "required": false,
        "description": "The 0-based numeric ID of the page to retrieve",
        "schema": {
          "type": "integer",
          "maximum": 1000000,
          "minimum": 0,
          "description": "The 0-based numeric ID of the page to retrieve",
          "default": 0,
          "title": "Page"
        },
        "type": "integer",
        "default": 0,
        "minimum": 0,
        "maximum": 1000000,
        "enum": []
      },
      {
        "name": "itemsPerPage",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "integer",
          "maximum": 100000,
          "minimum": 1,
          "default": 250,
          "title": "Itemsperpage"
        },
        "type": "integer",
        "default": 250,
        "minimum": 1,
        "maximum": 100000,
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/PaginatedResponse_SingleTissueIEqtl_"
            }
          }
        ]
      },
      {
        "status_code": "400",
        "description": "Unable Process Request",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/Message"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/association/singleTissueISqtl",
    "method": "GET",
    "summary": "Get Significant Single Tissue Isqtls",
    "description": "Retrieve Interaction sQTL Data.\n\n- This service retrieves cell type interaction sQTLs (isQTLs), from a specified dataset.\n- Results may be filtered by tissue\n- By default, the service queries the latest GTEx release.\n\nThe retrieved data is split into pages with `items_per_page` entries per page",
    "operation_id": "get_significant_single_tissue_isqtls_api_v2_association_singleTissueISqtl_get",
    "tags": [
      "Static Association Endpoints"
    ],
    "parameters": [
      {
        "name": "gencodeId",
        "location": "query",
        "required": false,
        "description": "A list of Versioned GENCODE IDs, e.g. ENSG00000065613.9,ENSG00000203782.5",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "maxItems": 60000,
          "description": "A list of Versioned GENCODE IDs, e.g. ENSG00000065613.9,ENSG00000203782.5",
          "title": "Gencodeid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "variantId",
        "location": "query",
        "required": false,
        "description": "A list of GTEx variant IDs",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of GTEx variant IDs",
          "title": "Variantid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "tissueSiteDetailId",
        "location": "query",
        "required": false,
        "description": "A list of Tissue IDs of the tissue(s) of interest. Can be a GTEx specific ID or an Ontology ID",
        "schema": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TissueSiteDetailId"
              },
              {
                "$ref": "#/components/schemas/TissueSiteOntologyId"
              }
            ]
          },
          "description": "A list of Tissue IDs of the tissue(s) of interest. Can be a GTEx specific ID or an Ontology ID",
          "title": "Tissuesitedetailid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "datasetId",
        "location": "query",
        "required": false,
        "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
        "schema": {
          "$ref": "#/components/schemas/DatasetId",
          "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
          "default": "gtex_v8"
        },
        "type": "",
        "default": "gtex_v8",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "page",
        "location": "query",
        "required": false,
        "description": "The 0-based numeric ID of the page to retrieve",
        "schema": {
          "type": "integer",
          "maximum": 1000000,
          "minimum": 0,
          "description": "The 0-based numeric ID of the page to retrieve",
          "default": 0,
          "title": "Page"
        },
        "type": "integer",
        "default": 0,
        "minimum": 0,
        "maximum": 1000000,
        "enum": []
      },
      {
        "name": "itemsPerPage",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "integer",
          "maximum": 100000,
          "minimum": 1,
          "default": 250,
          "title": "Itemsperpage"
        },
        "type": "integer",
        "default": 250,
        "minimum": 1,
        "maximum": 100000,
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/PaginatedResponse_SingleTissueISqtl_"
            }
          }
        ]
      },
      {
        "status_code": "400",
        "description": "Unable Process Request",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/Message"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/association/dyneqtl",
    "method": "POST",
    "summary": "Bulk Calculate Expression Quantitative Trait Loci",
    "description": "Calculate your own eQTLs\n\n- This service calculates the gene-variant association for any given pair of gene and variant,\nwhich may or may not be significant.\n- This requires as input a GENCODE ID, GTEx variant ID, and tissue site detail ID.\n\nBy default, the calculation is based on the latest GTEx release.",
    "operation_id": "bulk_calculate_expression_quantitative_trait_loci_api_v2_association_dyneqtl_post",
    "tags": [
      "Dynamic Association Endpoints"
    ],
    "parameters": [
      {
        "name": "datasetId",
        "location": "query",
        "required": false,
        "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
        "schema": {
          "$ref": "#/components/schemas/DatasetId",
          "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
          "default": "gtex_v8"
        },
        "type": "",
        "default": "gtex_v8",
        "minimum": "",
        "maximum": "",
        "enum": []
      }
    ],
    "request_body": {
      "description": "",
      "required": true,
      "content_types": [
        {
          "type": "application/json",
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicEqtlBody"
            },
            "minItems": 1,
            "title": "Request Body Data"
          }
        }
      ]
    },
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/PostDynamicEqtlResult"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/association/dyneqtl",
    "method": "GET",
    "summary": "Calculate Expression Quantitative Trait Loci",
    "description": "Calculate your own eQTLs\n\n- This service calculates the gene-variant association for any given pair of gene and variant,\nwhich may or may not be significant.\n- This requires as input a GENCODE ID, GTEx variant ID, and tissue site detail ID.\n\nBy default, the calculation is based on the latest GTEx release.",
    "operation_id": "calculate_expression_quantitative_trait_loci_api_v2_association_dyneqtl_get",
    "tags": [
      "Dynamic Association Endpoints"
    ],
    "parameters": [
      {
        "name": "tissueSiteDetailId",
        "location": "query",
        "required": true,
        "description": "The ID of the tissue of interest. Can be a GTEx specific ID or an Ontology ID",
        "schema": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/TissueSiteDetailId"
            },
            {
              "$ref": "#/components/schemas/TissueSiteOntologyId"
            }
          ],
          "description": "The ID of the tissue of interest. Can be a GTEx specific ID or an Ontology ID",
          "title": "Tissuesitedetailid"
        },
        "type": "",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "gencodeId",
        "location": "query",
        "required": true,
        "description": "A Versioned GENCODE ID of a gene, e.g. ENSG00000065613.9",
        "schema": {
          "type": "string",
          "description": "A Versioned GENCODE ID of a gene, e.g. ENSG00000065613.9",
          "title": "Gencodeid"
        },
        "type": "string",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "variantId",
        "location": "query",
        "required": true,
        "description": "A gtex variant ID",
        "schema": {
          "type": "string",
          "description": "A gtex variant ID",
          "title": "Variantid"
        },
        "type": "string",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "datasetId",
        "location": "query",
        "required": false,
        "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
        "schema": {
          "$ref": "#/components/schemas/DatasetId",
          "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
          "default": "gtex_v8"
        },
        "type": "",
        "default": "gtex_v8",
        "minimum": "",
        "maximum": "",
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/Eqtl"
            }
          }
        ]
      },
      {
        "status_code": "400",
        "description": "Unable to calculate eQTL",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/Message"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/association/dynieqtl",
    "method": "GET",
    "summary": "Calculate Ieqtls",
    "description": "Calculate your own Cell Specific eQTLs.\n\n- This service calculates the gene-variant association for any given pair of\ngene and variant, which may or may not be significant.\n- This requires as input a GENCODE ID, GTEx variant ID, and tissue site detail ID.\n\nBy default, the calculation is based on the latest GTEx release.",
    "operation_id": "calculate_ieqtls_api_v2_association_dynieqtl_get",
    "tags": [
      "Dynamic Association Endpoints"
    ],
    "parameters": [
      {
        "name": "cellType",
        "location": "query",
        "required": true,
        "description": "",
        "schema": {
          "$ref": "#/components/schemas/CellType"
        },
        "type": "",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "tissueSiteDetailId",
        "location": "query",
        "required": true,
        "description": "The ID of the tissue of interest. Can be a GTEx specific ID or an Ontology ID",
        "schema": {
          "$ref": "#/components/schemas/TissueSiteDetailId",
          "description": "The ID of the tissue of interest. Can be a GTEx specific ID or an Ontology ID"
        },
        "type": "",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "gencodeId",
        "location": "query",
        "required": true,
        "description": "A Versioned GENCODE ID of a gene, e.g. ENSG00000065613.9",
        "schema": {
          "type": "string",
          "description": "A Versioned GENCODE ID of a gene, e.g. ENSG00000065613.9",
          "title": "Gencodeid"
        },
        "type": "string",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "variantId",
        "location": "query",
        "required": true,
        "description": "A gtex variant ID",
        "schema": {
          "type": "string",
          "description": "A gtex variant ID",
          "title": "Variantid"
        },
        "type": "string",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "datasetId",
        "location": "query",
        "required": false,
        "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
        "schema": {
          "$ref": "#/components/schemas/DatasetId",
          "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
          "default": "gtex_v8"
        },
        "type": "",
        "default": "gtex_v8",
        "minimum": "",
        "maximum": "",
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/IEqtl"
            }
          }
        ]
      },
      {
        "status_code": "400",
        "description": "Unable to calculate ieQTL",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/Message"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/association/dynsqtl",
    "method": "GET",
    "summary": "Calculate Splicing Quantitative Trait Loci",
    "description": "",
    "operation_id": "calculate_splicing_quantitative_trait_loci_api_v2_association_dynsqtl_get",
    "tags": [
      "Dynamic Association Endpoints"
    ],
    "parameters": [
      {
        "name": "tissueSiteDetailId",
        "location": "query",
        "required": true,
        "description": "The ID of the tissue of interest. Can be a GTEx specific ID or an Ontology ID",
        "schema": {
          "$ref": "#/components/schemas/TissueSiteDetailId",
          "description": "The ID of the tissue of interest. Can be a GTEx specific ID or an Ontology ID"
        },
        "type": "",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "phenotypeId",
        "location": "query",
        "required": true,
        "description": "",
        "schema": {
          "type": "string",
          "title": "Phenotypeid"
        },
        "type": "string",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "variantId",
        "location": "query",
        "required": true,
        "description": "A gtex variant ID",
        "schema": {
          "type": "string",
          "description": "A gtex variant ID",
          "title": "Variantid"
        },
        "type": "string",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "datasetId",
        "location": "query",
        "required": false,
        "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
        "schema": {
          "$ref": "#/components/schemas/DatasetId",
          "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
          "default": "gtex_v8"
        },
        "type": "",
        "default": "gtex_v8",
        "minimum": "",
        "maximum": "",
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/Sqtl"
            }
          }
        ]
      },
      {
        "status_code": "400",
        "description": "Unable to calculate sQTL",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/Message"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/association/dynisqtl",
    "method": "GET",
    "summary": "Calculate Isqtls",
    "description": "Calculate your own Cell Specific sQTLs.\n\n- This service calculates the gene-variant association for any given pair of\ngene and variant, which may or may not be significant.\n- This requires as input a GENCODE ID, GTEx variant ID, and tissue site detail ID.\n\nBy default, the calculation is based on the latest GTEx release.",
    "operation_id": "calculate_isqtls_api_v2_association_dynisqtl_get",
    "tags": [
      "Dynamic Association Endpoints"
    ],
    "parameters": [
      {
        "name": "cellType",
        "location": "query",
        "required": true,
        "description": "",
        "schema": {
          "$ref": "#/components/schemas/CellType"
        },
        "type": "",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "tissueSiteDetailId",
        "location": "query",
        "required": true,
        "description": "The ID of the tissue of interest. Can be a GTEx specific ID or an Ontology ID",
        "schema": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/TissueSiteDetailId"
            },
            {
              "$ref": "#/components/schemas/TissueSiteOntologyId"
            }
          ],
          "description": "The ID of the tissue of interest. Can be a GTEx specific ID or an Ontology ID",
          "title": "Tissuesitedetailid"
        },
        "type": "",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "phenotypeId",
        "location": "query",
        "required": true,
        "description": "",
        "schema": {
          "type": "string",
          "title": "Phenotypeid"
        },
        "type": "string",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "variantId",
        "location": "query",
        "required": true,
        "description": "A gtex variant ID",
        "schema": {
          "type": "string",
          "description": "A gtex variant ID",
          "title": "Variantid"
        },
        "type": "string",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "datasetId",
        "location": "query",
        "required": false,
        "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
        "schema": {
          "$ref": "#/components/schemas/DatasetId",
          "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
          "default": "gtex_v8"
        },
        "type": "",
        "default": "gtex_v8",
        "minimum": "",
        "maximum": "",
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/ISqtl"
            }
          }
        ]
      },
      {
        "status_code": "400",
        "description": "Unable to calculate isQTL",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/Message"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/biobank/sample",
    "method": "GET",
    "summary": "Get Sample",
    "description": "",
    "operation_id": "get_sample_api_v2_biobank_sample_get",
    "tags": [
      "Biobank Data Endpoints"
    ],
    "parameters": [
      {
        "name": "draw",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "integer",
          "title": "Draw"
        },
        "type": "integer",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "materialType",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/MaterialType"
          },
          "title": "Materialtype"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "tissueSiteDetailId",
        "location": "query",
        "required": false,
        "description": "Tissues of interest",
        "schema": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TissueSiteDetailId"
              },
              {
                "$ref": "#/components/schemas/TissueSiteOntologyId"
              }
            ]
          },
          "description": "Tissues of interest",
          "title": "Tissuesitedetailid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "pathCategory",
        "location": "query",
        "required": false,
        "description": "A list of Pathology Category(s)",
        "schema": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/PathCategory"
          },
          "description": "A list of Pathology Category(s)",
          "title": "Pathcategory"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "tissueSampleId",
        "location": "query",
        "required": false,
        "description": "A list of Tissue Sample ID(s)",
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^GTEX-[A-Z0-9]{4,5}-[0-9]{4}(-[A-Z0-9a-z]{3,7})?$"
          },
          "description": "A list of Tissue Sample ID(s)",
          "title": "Tissuesampleid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "sex",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "$ref": "#/components/schemas/DonorSex"
        },
        "type": "",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "sortBy",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "$ref": "#/components/schemas/SortBy",
          "default": "sampleId"
        },
        "type": "",
        "default": "sampleId",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "sortDirection",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "$ref": "#/components/schemas/SortDirection",
          "default": "asc"
        },
        "type": "",
        "default": "asc",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "searchTerm",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "string",
          "title": "Searchterm"
        },
        "type": "string",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "sampleId",
        "location": "query",
        "required": false,
        "description": "GTEx sample ID",
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^GTEX-[A-Z0-9]{4,5}-[0-9]{4}(-[A-Z0-9a-z]{3,7})?-SM-[A-Z0-9]{5}$"
          },
          "description": "GTEx sample ID",
          "title": "Sampleid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "subjectId",
        "location": "query",
        "required": false,
        "description": "GTEx subject ID",
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^GTEX-[A-Z0-9]{4,5}$"
          },
          "description": "GTEx subject ID",
          "title": "Subjectid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "ageBracket",
        "location": "query",
        "required": false,
        "description": "The age bracket(s) of the donors of interest",
        "schema": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/DonorAgeBracket"
          },
          "description": "The age bracket(s) of the donors of interest",
          "title": "Agebracket"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "hardyScale",
        "location": "query",
        "required": false,
        "description": "A list of Hardy Scale(s) of interest",
        "schema": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/HardyScale-Input"
          },
          "description": "A list of Hardy Scale(s) of interest",
          "title": "Hardyscale"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "hasExpressionData",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "boolean",
          "title": "Hasexpressiondata"
        },
        "type": "boolean",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "hasGenotype",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "boolean",
          "title": "Hasgenotype"
        },
        "type": "boolean",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "page",
        "location": "query",
        "required": false,
        "description": "The 0-based numeric ID of the page to retrieve",
        "schema": {
          "type": "integer",
          "maximum": 1000000,
          "minimum": 0,
          "description": "The 0-based numeric ID of the page to retrieve",
          "default": 0,
          "title": "Page"
        },
        "type": "integer",
        "default": 0,
        "minimum": 0,
        "maximum": 1000000,
        "enum": []
      },
      {
        "name": "itemsPerPage",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "integer",
          "maximum": 100000,
          "minimum": 1,
          "default": 250,
          "title": "Itemsperpage"
        },
        "type": "integer",
        "default": 250,
        "minimum": 1,
        "maximum": 100000,
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/BiobankResponse"
            }
          }
        ]
      },
      {
        "status_code": "400",
        "description": "Illegal query input",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/Message"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/biobank/download",
    "method": "GET",
    "summary": "Download",
    "description": "",
    "operation_id": "download_api_v2_biobank_download_get",
    "tags": [
      "Biobank Data Endpoints"
    ],
    "parameters": [
      {
        "name": "materialType",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/MaterialType"
          },
          "title": "Materialtype"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "tissueSiteDetailId",
        "location": "query",
        "required": false,
        "description": "Tissues of interest",
        "schema": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TissueSiteDetailId"
              },
              {
                "$ref": "#/components/schemas/TissueSiteOntologyId"
              }
            ]
          },
          "description": "Tissues of interest",
          "title": "Tissuesitedetailid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "pathCategory",
        "location": "query",
        "required": false,
        "description": "A list of Pathology Category(s)",
        "schema": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/PathCategory"
          },
          "description": "A list of Pathology Category(s)",
          "title": "Pathcategory"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "tissueSampleId",
        "location": "query",
        "required": false,
        "description": "A list of Tissue Sample ID(s)",
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^GTEX-[A-Z0-9]{4,5}-[0-9]{4}(-[A-Z0-9a-z]{3,7})?$"
          },
          "description": "A list of Tissue Sample ID(s)",
          "title": "Tissuesampleid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "sex",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "$ref": "#/components/schemas/DonorSex"
        },
        "type": "",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "sortBy",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "$ref": "#/components/schemas/SortBy",
          "default": "sampleId"
        },
        "type": "",
        "default": "sampleId",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "sortDirection",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "$ref": "#/components/schemas/SortDirection",
          "default": "asc"
        },
        "type": "",
        "default": "asc",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "searchTerm",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "string",
          "title": "Searchterm"
        },
        "type": "string",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "sampleId",
        "location": "query",
        "required": false,
        "description": "GTEx sample ID",
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^GTEX-[A-Z0-9]{4,5}-[0-9]{4}(-[A-Z0-9a-z]{3,7})?-SM-[A-Z0-9]{5}$"
          },
          "description": "GTEx sample ID",
          "title": "Sampleid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "subjectId",
        "location": "query",
        "required": false,
        "description": "GTEx subject ID",
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^GTEX-[A-Z0-9]{4,5}$"
          },
          "description": "GTEx subject ID",
          "title": "Subjectid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "ageBracket",
        "location": "query",
        "required": false,
        "description": "The age bracket(s) of the donors of interest",
        "schema": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/DonorAgeBracket"
          },
          "description": "The age bracket(s) of the donors of interest",
          "title": "Agebracket"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "hardyScale",
        "location": "query",
        "required": false,
        "description": "A list of Hardy Scale(s) of interest",
        "schema": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/HardyScale-Input"
          },
          "description": "A list of Hardy Scale(s) of interest",
          "title": "Hardyscale"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "hasExpressionData",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "boolean",
          "title": "Hasexpressiondata"
        },
        "type": "boolean",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "hasGenotype",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "boolean",
          "title": "Hasgenotype"
        },
        "type": "boolean",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BiobankSample"
              },
              "title": "Response Download Api V2 Biobank Download Get"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/dataset/annotation",
    "method": "GET",
    "summary": "Get Annotation",
    "description": "This service returns the list of annotations and allowed values by which a particular dataset can be subsetted.\nResults may be filtered by dataset.",
    "operation_id": "get_annotation_api_v2_dataset_annotation_get",
    "tags": [
      "Datasets Endpoints"
    ],
    "parameters": [
      {
        "name": "datasetId",
        "location": "query",
        "required": false,
        "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
        "schema": {
          "$ref": "#/components/schemas/DatasetId",
          "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
          "default": "gtex_v8"
        },
        "type": "",
        "default": "gtex_v8",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "page",
        "location": "query",
        "required": false,
        "description": "The 0-based numeric ID of the page to retrieve",
        "schema": {
          "type": "integer",
          "maximum": 1000000,
          "minimum": 0,
          "description": "The 0-based numeric ID of the page to retrieve",
          "default": 0,
          "title": "Page"
        },
        "type": "integer",
        "default": 0,
        "minimum": 0,
        "maximum": 1000000,
        "enum": []
      },
      {
        "name": "itemsPerPage",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "integer",
          "maximum": 100000,
          "minimum": 1,
          "default": 250,
          "title": "Itemsperpage"
        },
        "type": "integer",
        "default": 250,
        "minimum": 1,
        "maximum": 100000,
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/PaginatedResponse_Annotation_"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/dataset/collapsedGeneModelExon",
    "method": "GET",
    "summary": "Get Collapsed Gene Model Exon",
    "description": "This service returns the collapsed exons in the gene model of the given gene. Gene-level and exon-level expression\nquantification were based on the GENCODE annotation, collapsed to a single transcript model for each gene using an\nalgorithm developed by the GTEx analysis team.\n\nBy default, this service queries the models used by the latest GTEx release.",
    "operation_id": "get_collapsed_gene_model_exon_api_v2_dataset_collapsedGeneModelExon_get",
    "tags": [
      "Datasets Endpoints"
    ],
    "parameters": [
      {
        "name": "gencodeId",
        "location": "query",
        "required": true,
        "description": "A Versioned GENCODE ID of a gene, e.g. ENSG00000065613.9",
        "schema": {
          "type": "string",
          "description": "A Versioned GENCODE ID of a gene, e.g. ENSG00000065613.9",
          "title": "Gencodeid"
        },
        "type": "string",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "datasetId",
        "location": "query",
        "required": false,
        "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
        "schema": {
          "$ref": "#/components/schemas/DatasetId",
          "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
          "default": "gtex_v8"
        },
        "type": "",
        "default": "gtex_v8",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "page",
        "location": "query",
        "required": false,
        "description": "The 0-based numeric ID of the page to retrieve",
        "schema": {
          "type": "integer",
          "maximum": 1000000,
          "minimum": 0,
          "description": "The 0-based numeric ID of the page to retrieve",
          "default": 0,
          "title": "Page"
        },
        "type": "integer",
        "default": 0,
        "minimum": 0,
        "maximum": 1000000,
        "enum": []
      },
      {
        "name": "itemsPerPage",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "integer",
          "maximum": 100000,
          "minimum": 1,
          "default": 250,
          "title": "Itemsperpage"
        },
        "type": "integer",
        "default": 250,
        "minimum": 1,
        "maximum": 100000,
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/PaginatedResponse_CollapsedGeneModelExon_"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/dataset/fileList",
    "method": "GET",
    "summary": "Get File List",
    "description": "Get all the files in GTEx dataset for Download page",
    "operation_id": "get_file_list_api_v2_dataset_fileList_get",
    "tags": [
      "Datasets Endpoints"
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "items": {
                "$ref": "#/components/schemas/File"
              },
              "type": "array",
              "title": "Response Get File List Api V2 Dataset Filelist Get"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/dataset/openAccessFilesMetadata",
    "method": "GET",
    "summary": "Get Downloads Page Data",
    "description": "Retrieves all the files belonging to the given `project_id` for display on the `Downloads Page`",
    "operation_id": "get_downloads_page_data_api_v2_dataset_openAccessFilesMetadata_get",
    "tags": [
      "Datasets Endpoints"
    ],
    "parameters": [
      {
        "name": "project_id",
        "location": "query",
        "required": true,
        "description": "",
        "schema": {
          "$ref": "#/components/schemas/AvailableProjects"
        },
        "type": "",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/OpenAccessFilesMetadata"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/dataset/fullCollapsedGeneModelExon",
    "method": "GET",
    "summary": "Get Full Get Collapsed Gene Model Exon",
    "description": "This service allows the user to query the full Collapsed Gene Model Exon of a specific gene by gencode ID",
    "operation_id": "get_full_get_collapsed_gene_model_exon_api_v2_dataset_fullCollapsedGeneModelExon_get",
    "tags": [
      "Datasets Endpoints"
    ],
    "parameters": [
      {
        "name": "gencodeId",
        "location": "query",
        "required": true,
        "description": "A Versioned GENCODE ID of a gene, e.g. ENSG00000065613.9",
        "schema": {
          "type": "string",
          "description": "A Versioned GENCODE ID of a gene, e.g. ENSG00000065613.9",
          "title": "Gencodeid"
        },
        "type": "string",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "datasetId",
        "location": "query",
        "required": false,
        "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
        "schema": {
          "$ref": "#/components/schemas/DatasetId",
          "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
          "default": "gtex_v8"
        },
        "type": "",
        "default": "gtex_v8",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "page",
        "location": "query",
        "required": false,
        "description": "The 0-based numeric ID of the page to retrieve",
        "schema": {
          "type": "integer",
          "maximum": 1000000,
          "minimum": 0,
          "description": "The 0-based numeric ID of the page to retrieve",
          "default": 0,
          "title": "Page"
        },
        "type": "integer",
        "default": 0,
        "minimum": 0,
        "maximum": 1000000,
        "enum": []
      },
      {
        "name": "itemsPerPage",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "integer",
          "maximum": 100000,
          "minimum": 1,
          "default": 250,
          "title": "Itemsperpage"
        },
        "type": "integer",
        "default": 250,
        "minimum": 1,
        "maximum": 100000,
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/PaginatedResponse_CollapsedGeneModelExon_"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/dataset/functionalAnnotation",
    "method": "GET",
    "summary": "Get Functional Annotation",
    "description": "This endpoint retrieves the functional annotation of a certain chromosome location. Default to most recent dataset\nrelease.",
    "operation_id": "get_functional_annotation_api_v2_dataset_functionalAnnotation_get",
    "tags": [
      "Datasets Endpoints"
    ],
    "parameters": [
      {
        "name": "datasetId",
        "location": "query",
        "required": false,
        "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
        "schema": {
          "$ref": "#/components/schemas/DatasetId",
          "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
          "default": "gtex_v8"
        },
        "type": "",
        "default": "gtex_v8",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "chromosome",
        "location": "query",
        "required": true,
        "description": "",
        "schema": {
          "$ref": "#/components/schemas/Chromosome"
        },
        "type": "",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "start",
        "location": "query",
        "required": true,
        "description": "",
        "schema": {
          "type": "integer",
          "maximum": 250000000,
          "minimum": 0,
          "title": "Start"
        },
        "type": "integer",
        "default": "",
        "minimum": 0,
        "maximum": 250000000,
        "enum": []
      },
      {
        "name": "end",
        "location": "query",
        "required": true,
        "description": "",
        "schema": {
          "type": "integer",
          "maximum": 250000000,
          "minimum": 0,
          "title": "End"
        },
        "type": "integer",
        "default": "",
        "minimum": 0,
        "maximum": 250000000,
        "enum": []
      },
      {
        "name": "page",
        "location": "query",
        "required": false,
        "description": "The 0-based numeric ID of the page to retrieve",
        "schema": {
          "type": "integer",
          "maximum": 1000000,
          "minimum": 0,
          "description": "The 0-based numeric ID of the page to retrieve",
          "default": 0,
          "title": "Page"
        },
        "type": "integer",
        "default": 0,
        "minimum": 0,
        "maximum": 1000000,
        "enum": []
      },
      {
        "name": "itemsPerPage",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "integer",
          "maximum": 100000,
          "minimum": 1,
          "default": 250,
          "title": "Itemsperpage"
        },
        "type": "integer",
        "default": 250,
        "minimum": 1,
        "maximum": 100000,
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/PaginatedResponse_FunctionalAnnotation_"
            }
          }
        ]
      },
      {
        "status_code": "400",
        "description": "Illegal query input",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/Message"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/dataset/sample",
    "method": "GET",
    "summary": "Get Sample",
    "description": "This service returns information of samples used in analyses from all datasets.\nResults may be filtered by dataset ID, sample ID, subject ID, sample metadata, or other provided parameters.\nBy default, this service queries the latest GTEx release.",
    "operation_id": "get_sample_api_v2_dataset_sample_get",
    "tags": [
      "Datasets Endpoints"
    ],
    "parameters": [
      {
        "name": "datasetId",
        "location": "query",
        "required": false,
        "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
        "schema": {
          "$ref": "#/components/schemas/DatasetId",
          "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
          "default": "gtex_v8"
        },
        "type": "",
        "default": "gtex_v8",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "sampleId",
        "location": "query",
        "required": false,
        "description": "GTEx sample ID",
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^GTEX-[A-Z0-9]{4,5}-[0-9]{4}(-[A-Z0-9a-z]{3,7})?-SM-[A-Z0-9]{5}$"
          },
          "description": "GTEx sample ID",
          "title": "Sampleid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "tissueSampleId",
        "location": "query",
        "required": false,
        "description": "A list of Tissue Sample ID(s)",
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^GTEX-[A-Z0-9]{4,5}-[0-9]{4}(-[A-Z0-9a-z]{3,7})?$"
          },
          "description": "A list of Tissue Sample ID(s)",
          "title": "Tissuesampleid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "subjectId",
        "location": "query",
        "required": false,
        "description": "GTEx subject ID",
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^GTEX-[A-Z0-9]{4,5}$"
          },
          "description": "GTEx subject ID",
          "title": "Subjectid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "ageBracket",
        "location": "query",
        "required": false,
        "description": "The age bracket(s) of the donors of interest",
        "schema": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/DonorAgeBracket"
          },
          "description": "The age bracket(s) of the donors of interest",
          "title": "Agebracket"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "sex",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "$ref": "#/components/schemas/DonorSex"
        },
        "type": "",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "pathCategory",
        "location": "query",
        "required": false,
        "description": "A list of Pathology Category(s)",
        "schema": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/PathCategory"
          },
          "description": "A list of Pathology Category(s)",
          "title": "Pathcategory"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "tissueSiteDetailId",
        "location": "query",
        "required": false,
        "description": "Tissues of interest",
        "schema": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/TissueSiteDetailId"
          },
          "description": "Tissues of interest",
          "title": "Tissuesitedetailid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "aliquotId",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^SM-[A-Z0-9]{5}$"
          },
          "title": "Aliquotid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "autolysisScore",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/AutolysisScore"
          },
          "title": "Autolysisscore"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "hardyScale",
        "location": "query",
        "required": false,
        "description": "A list of Hardy Scale(s) of interest",
        "schema": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/HardyScale-Input"
          },
          "description": "A list of Hardy Scale(s) of interest",
          "title": "Hardyscale"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "ischemicTime",
        "location": "query",
        "required": false,
        "description": "Ischemic Time for the sample of interest",
        "schema": {
          "type": "array",
          "items": {
            "type": "integer",
            "maximum": 2100,
            "minimum": -1300
          },
          "description": "Ischemic Time for the sample of interest",
          "title": "Ischemictime"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "ischemicTimeGroup",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/IschemicTimeGroup"
          },
          "title": "Ischemictimegroup"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "rin",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "array",
          "items": {
            "type": "number",
            "maximum": 10.0,
            "minimum": 1.0
          },
          "title": "Rin"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "uberonId",
        "location": "query",
        "required": false,
        "description": "A list of Uberon ID(s) of interest.",
        "schema": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/TissueSiteOntologyId"
          },
          "description": "A list of Uberon ID(s) of interest.",
          "title": "Uberonid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "dataType",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/DataType"
          },
          "title": "Datatype"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "sortBy",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "$ref": "#/components/schemas/SampleSortBy",
          "default": "sampleId"
        },
        "type": "",
        "default": "sampleId",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "sortDirection",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "$ref": "#/components/schemas/SortDirection",
          "default": "asc"
        },
        "type": "",
        "default": "asc",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "page",
        "location": "query",
        "required": false,
        "description": "The 0-based numeric ID of the page to retrieve",
        "schema": {
          "type": "integer",
          "maximum": 1000000,
          "minimum": 0,
          "description": "The 0-based numeric ID of the page to retrieve",
          "default": 0,
          "title": "Page"
        },
        "type": "integer",
        "default": 0,
        "minimum": 0,
        "maximum": 1000000,
        "enum": []
      },
      {
        "name": "itemsPerPage",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "integer",
          "maximum": 100000,
          "minimum": 1,
          "default": 250,
          "title": "Itemsperpage"
        },
        "type": "integer",
        "default": 250,
        "minimum": 1,
        "maximum": 100000,
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/PaginatedResponse_DatasetSample_"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/dataset/tissueSiteDetail",
    "method": "GET",
    "summary": "Get Tissue Site Detail",
    "description": "Retrieve all tissue site detail information in the database",
    "operation_id": "get_tissue_site_detail_api_v2_dataset_tissueSiteDetail_get",
    "tags": [
      "Datasets Endpoints"
    ],
    "parameters": [
      {
        "name": "datasetId",
        "location": "query",
        "required": false,
        "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
        "schema": {
          "$ref": "#/components/schemas/DatasetId",
          "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
          "default": "gtex_v8"
        },
        "type": "",
        "default": "gtex_v8",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "page",
        "location": "query",
        "required": false,
        "description": "The 0-based numeric ID of the page to retrieve",
        "schema": {
          "type": "integer",
          "maximum": 1000000,
          "minimum": 0,
          "description": "The 0-based numeric ID of the page to retrieve",
          "default": 0,
          "title": "Page"
        },
        "type": "integer",
        "default": 0,
        "minimum": 0,
        "maximum": 1000000,
        "enum": []
      },
      {
        "name": "itemsPerPage",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "integer",
          "maximum": 100000,
          "minimum": 1,
          "default": 250,
          "title": "Itemsperpage"
        },
        "type": "integer",
        "default": 250,
        "minimum": 1,
        "maximum": 100000,
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/PaginatedResponse_TissueSiteDetail_"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/dataset/subject",
    "method": "GET",
    "summary": "Get Subject",
    "description": "This service returns information of subjects used in analyses from all datasets.\nResults may be filtered by dataset ID, subject ID, sex, age bracket or Hardy Scale.\nBy default, this service queries the latest GTEx release.",
    "operation_id": "get_subject_api_v2_dataset_subject_get",
    "tags": [
      "Datasets Endpoints"
    ],
    "parameters": [
      {
        "name": "datasetId",
        "location": "query",
        "required": false,
        "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
        "schema": {
          "$ref": "#/components/schemas/DatasetId",
          "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
          "default": "gtex_v8"
        },
        "type": "",
        "default": "gtex_v8",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "sex",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "$ref": "#/components/schemas/DonorSex"
        },
        "type": "",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "ageBracket",
        "location": "query",
        "required": false,
        "description": "The age bracket(s) of the donors of interest",
        "schema": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/DonorAgeBracket"
          },
          "description": "The age bracket(s) of the donors of interest",
          "title": "Agebracket"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "hardyScale",
        "location": "query",
        "required": false,
        "description": "The hardy scale of interest",
        "schema": {
          "$ref": "#/components/schemas/HardyScale-Input",
          "description": "The hardy scale of interest"
        },
        "type": "",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "subjectId",
        "location": "query",
        "required": false,
        "description": "GTEx subject ID",
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^GTEX-[A-Z0-9]{4,5}$"
          },
          "description": "GTEx subject ID",
          "title": "Subjectid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "page",
        "location": "query",
        "required": false,
        "description": "The 0-based numeric ID of the page to retrieve",
        "schema": {
          "type": "integer",
          "maximum": 1000000,
          "minimum": 0,
          "description": "The 0-based numeric ID of the page to retrieve",
          "default": 0,
          "title": "Page"
        },
        "type": "integer",
        "default": 0,
        "minimum": 0,
        "maximum": 1000000,
        "enum": []
      },
      {
        "name": "itemsPerPage",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "integer",
          "maximum": 100000,
          "minimum": 1,
          "default": 250,
          "title": "Itemsperpage"
        },
        "type": "integer",
        "default": 250,
        "minimum": 1,
        "maximum": 100000,
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/PaginatedResponse_Subject_"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/dataset/variant",
    "method": "GET",
    "summary": "Get Variant",
    "description": "This service returns information about a variant, including position, dbSNP RS ID, the reference allele,\nthe alternative allele, and whether the minor allele frequency is >= 1%.\nFor GTEx v6p, there is also information about whether the whole exome sequence and chip sequencing data are\navailable. Results may be queried by GTEx variant ID (variantId), dbSNP RS ID (snpId) or genomic location\n(chromosome and pos). Variants are identified based on the genotype data of each dataset cohort, namely,\nare dataset-dependent. Each variant is assigned a unique GTEx variant ID (i.e. the primary key).\nNot all variants have a mappable dbSNP RS ID. By default, this service queries the latest GTEx release.",
    "operation_id": "get_variant_api_v2_dataset_variant_get",
    "tags": [
      "Datasets Endpoints"
    ],
    "parameters": [
      {
        "name": "snpId",
        "location": "query",
        "required": false,
        "description": "A Snp ID",
        "schema": {
          "type": "string",
          "minLength": 1,
          "description": "A Snp ID",
          "title": "Snpid"
        },
        "type": "string",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "variantId",
        "location": "query",
        "required": false,
        "description": "A gtex variant ID",
        "schema": {
          "type": "string",
          "description": "A gtex variant ID",
          "title": "Variantid"
        },
        "type": "string",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "datasetId",
        "location": "query",
        "required": false,
        "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
        "schema": {
          "$ref": "#/components/schemas/DatasetId",
          "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
          "default": "gtex_v8"
        },
        "type": "",
        "default": "gtex_v8",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "chromosome",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "$ref": "#/components/schemas/Chromosome"
        },
        "type": "",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "pos",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "title": "Pos"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "page",
        "location": "query",
        "required": false,
        "description": "The 0-based numeric ID of the page to retrieve",
        "schema": {
          "type": "integer",
          "maximum": 1000000,
          "minimum": 0,
          "description": "The 0-based numeric ID of the page to retrieve",
          "default": 0,
          "title": "Page"
        },
        "type": "integer",
        "default": 0,
        "minimum": 0,
        "maximum": 1000000,
        "enum": []
      },
      {
        "name": "itemsPerPage",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "integer",
          "maximum": 100000,
          "minimum": 1,
          "default": 250,
          "title": "Itemsperpage"
        },
        "type": "integer",
        "default": 250,
        "minimum": 1,
        "maximum": 100000,
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/PaginatedResponse_Variant_"
            }
          }
        ]
      },
      {
        "status_code": "400",
        "description": "Illegal query input",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/Message"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/dataset/variantByLocation",
    "method": "GET",
    "summary": "Get Variant By Location",
    "description": "This service allows the user to query information about variants on a certain chromosome at a certain location",
    "operation_id": "get_variant_by_location_api_v2_dataset_variantByLocation_get",
    "tags": [
      "Datasets Endpoints"
    ],
    "parameters": [
      {
        "name": "start",
        "location": "query",
        "required": true,
        "description": "",
        "schema": {
          "type": "integer",
          "maximum": 250000000,
          "minimum": 0,
          "title": "Start"
        },
        "type": "integer",
        "default": "",
        "minimum": 0,
        "maximum": 250000000,
        "enum": []
      },
      {
        "name": "end",
        "location": "query",
        "required": true,
        "description": "",
        "schema": {
          "type": "integer",
          "maximum": 250000000,
          "minimum": 0,
          "title": "End"
        },
        "type": "integer",
        "default": "",
        "minimum": 0,
        "maximum": 250000000,
        "enum": []
      },
      {
        "name": "chromosome",
        "location": "query",
        "required": true,
        "description": "",
        "schema": {
          "$ref": "#/components/schemas/Chromosome"
        },
        "type": "",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "sortBy",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "$ref": "#/components/schemas/VariantSortBy",
          "default": "pos"
        },
        "type": "",
        "default": "pos",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "sortDirection",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "$ref": "#/components/schemas/SortDirection",
          "default": "asc"
        },
        "type": "",
        "default": "asc",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "datasetId",
        "location": "query",
        "required": false,
        "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
        "schema": {
          "$ref": "#/components/schemas/DatasetId",
          "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
          "default": "gtex_v8"
        },
        "type": "",
        "default": "gtex_v8",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "page",
        "location": "query",
        "required": false,
        "description": "The 0-based numeric ID of the page to retrieve",
        "schema": {
          "type": "integer",
          "maximum": 1000000,
          "minimum": 0,
          "description": "The 0-based numeric ID of the page to retrieve",
          "default": 0,
          "title": "Page"
        },
        "type": "integer",
        "default": 0,
        "minimum": 0,
        "maximum": 1000000,
        "enum": []
      },
      {
        "name": "itemsPerPage",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "integer",
          "maximum": 100000,
          "minimum": 1,
          "default": 250,
          "title": "Itemsperpage"
        },
        "type": "integer",
        "default": 250,
        "minimum": 1,
        "maximum": 100000,
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/PaginatedResponse_Variant_"
            }
          }
        ]
      },
      {
        "status_code": "400",
        "description": "Illegal query input",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/Message"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/dataset/ld",
    "method": "GET",
    "summary": "Get Linkage Disequilibrium Data",
    "description": "Find linkage disequilibrium (LD) data for a given gene.\n\nThis endpoint returns linkage disequilibrium data for the cis-eQTLs found associated with the provided\ngene in a specified dataset. Results are queried by gencode ID.\nBy default, the service queries the latest GTEx release.\nSpecify a dataset ID to fetch results from a different dataset.",
    "operation_id": "get_linkage_disequilibrium_data_api_v2_dataset_ld_get",
    "tags": [
      "Datasets Endpoints"
    ],
    "parameters": [
      {
        "name": "gencodeId",
        "location": "query",
        "required": true,
        "description": "A Versioned GENCODE ID of a gene, e.g. ENSG00000065613.9",
        "schema": {
          "type": "string",
          "description": "A Versioned GENCODE ID of a gene, e.g. ENSG00000065613.9",
          "title": "Gencodeid"
        },
        "type": "string",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "datasetId",
        "location": "query",
        "required": false,
        "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
        "schema": {
          "$ref": "#/components/schemas/DatasetId",
          "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
          "default": "gtex_v8"
        },
        "type": "",
        "default": "gtex_v8",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "page",
        "location": "query",
        "required": false,
        "description": "The 0-based numeric ID of the page to retrieve",
        "schema": {
          "type": "integer",
          "maximum": 1000000,
          "minimum": 0,
          "description": "The 0-based numeric ID of the page to retrieve",
          "default": 0,
          "title": "Page"
        },
        "type": "integer",
        "default": 0,
        "minimum": 0,
        "maximum": 1000000,
        "enum": []
      },
      {
        "name": "itemsPerPage",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "integer",
          "maximum": 100000,
          "minimum": 1,
          "default": 250,
          "title": "Itemsperpage"
        },
        "type": "integer",
        "default": 250,
        "minimum": 1,
        "maximum": 100000,
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/PaginatedResponse_List_Union_str__float___"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/dataset/ldByVariant",
    "method": "GET",
    "summary": "Get Linkage Disequilibrium By Variant Data",
    "description": "Find linkage disequilibrium (LD) data for a given variant",
    "operation_id": "get_linkage_disequilibrium_by_variant_data_api_v2_dataset_ldByVariant_get",
    "tags": [
      "Datasets Endpoints"
    ],
    "parameters": [
      {
        "name": "variantId",
        "location": "query",
        "required": false,
        "description": "A gtex variant ID",
        "schema": {
          "type": "string",
          "description": "A gtex variant ID",
          "title": "Variantid"
        },
        "type": "string",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "page",
        "location": "query",
        "required": false,
        "description": "The 0-based numeric ID of the page to retrieve",
        "schema": {
          "type": "integer",
          "maximum": 1000000,
          "minimum": 0,
          "description": "The 0-based numeric ID of the page to retrieve",
          "default": 0,
          "title": "Page"
        },
        "type": "integer",
        "default": 0,
        "minimum": 0,
        "maximum": 1000000,
        "enum": []
      },
      {
        "name": "itemsPerPage",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "integer",
          "maximum": 100000,
          "minimum": 1,
          "default": 250,
          "title": "Itemsperpage"
        },
        "type": "integer",
        "default": 250,
        "minimum": 1,
        "maximum": 100000,
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/PaginatedResponse_List_Union_str__float___"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/expression/expressionPca",
    "method": "GET",
    "summary": "Get Expression Pca",
    "description": "Find gene expression PCA data.\n\n- Returns gene expression PCA (principal component analysis) in tissues.\n- Results may be filtered by tissue, sample, or dataset.\n\nBy default, the service queries the latest GTEx release.",
    "operation_id": "get_expression_pca_api_v2_expression_expressionPca_get",
    "tags": [
      "Expression Data Endpoints"
    ],
    "parameters": [
      {
        "name": "tissueSiteDetailId",
        "location": "query",
        "required": true,
        "description": "A list of Tissue IDs of the tissue(s) of interest. Can be a GTEx specific ID or an Ontology ID",
        "schema": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TissueSiteDetailId"
              },
              {
                "$ref": "#/components/schemas/TissueSiteOntologyId"
              }
            ]
          },
          "description": "A list of Tissue IDs of the tissue(s) of interest. Can be a GTEx specific ID or an Ontology ID",
          "title": "Tissuesitedetailid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "datasetId",
        "location": "query",
        "required": false,
        "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
        "schema": {
          "$ref": "#/components/schemas/DatasetId",
          "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
          "default": "gtex_v8"
        },
        "type": "",
        "default": "gtex_v8",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "sampleId",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "string",
          "pattern": "^GTEX-[A-Z0-9]{5}-[0-9]{4}-SM-[A-Z0-9]{5}$",
          "title": "Sampleid"
        },
        "type": "string",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "page",
        "location": "query",
        "required": false,
        "description": "The 0-based numeric ID of the page to retrieve",
        "schema": {
          "type": "integer",
          "maximum": 1000000,
          "minimum": 0,
          "description": "The 0-based numeric ID of the page to retrieve",
          "default": 0,
          "title": "Page"
        },
        "type": "integer",
        "default": 0,
        "minimum": 0,
        "maximum": 1000000,
        "enum": []
      },
      {
        "name": "itemsPerPage",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "integer",
          "maximum": 100000,
          "minimum": 1,
          "default": 250,
          "title": "Itemsperpage"
        },
        "type": "integer",
        "default": 250,
        "minimum": 1,
        "maximum": 100000,
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/PaginatedResponse_ExpressionPCA_"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/expression/geneExpression",
    "method": "GET",
    "summary": "Get Gene Expression",
    "description": "Find normalized gene expression data.\n\n- Returns normalized gene expression in tissues at the sample level.\n- Results may be filtered by dataset, gene or tissue, but at least one gene must be provided.\n\nBy default, this service queries the latest GTEx release.",
    "operation_id": "get_gene_expression_api_v2_expression_geneExpression_get",
    "tags": [
      "Expression Data Endpoints"
    ],
    "parameters": [
      {
        "name": "gencodeId",
        "location": "query",
        "required": true,
        "description": "A list of Versioned GENCODE IDs, e.g. ENSG00000065613.9,ENSG00000203782.5",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "maxItems": 60000,
          "description": "A list of Versioned GENCODE IDs, e.g. ENSG00000065613.9,ENSG00000203782.5",
          "title": "Gencodeid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "datasetId",
        "location": "query",
        "required": false,
        "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
        "schema": {
          "$ref": "#/components/schemas/DatasetId",
          "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
          "default": "gtex_v8"
        },
        "type": "",
        "default": "gtex_v8",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "tissueSiteDetailId",
        "location": "query",
        "required": false,
        "description": "A list of Tissue IDs of the tissue(s) of interest. Can be a GTEx specific ID or an Ontology ID",
        "schema": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TissueSiteDetailId"
              },
              {
                "$ref": "#/components/schemas/TissueSiteOntologyId"
              }
            ]
          },
          "description": "A list of Tissue IDs of the tissue(s) of interest. Can be a GTEx specific ID or an Ontology ID",
          "title": "Tissuesitedetailid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "attributeSubset",
        "location": "query",
        "required": false,
        "description": "Donor attribute to subset data by",
        "schema": {
          "$ref": "#/components/schemas/DonorAttribute",
          "description": "Donor attribute to subset data by"
        },
        "type": "",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "page",
        "location": "query",
        "required": false,
        "description": "The 0-based numeric ID of the page to retrieve",
        "schema": {
          "type": "integer",
          "maximum": 1000000,
          "minimum": 0,
          "description": "The 0-based numeric ID of the page to retrieve",
          "default": 0,
          "title": "Page"
        },
        "type": "integer",
        "default": 0,
        "minimum": 0,
        "maximum": 1000000,
        "enum": []
      },
      {
        "name": "itemsPerPage",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "integer",
          "maximum": 100000,
          "minimum": 1,
          "default": 250,
          "title": "Itemsperpage"
        },
        "type": "integer",
        "default": 250,
        "minimum": 1,
        "maximum": 100000,
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/PaginatedResponse_GeneExpression_"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/expression/medianExonExpression",
    "method": "GET",
    "summary": "Get Median Exon Expression",
    "description": "Find median exon expression data.\n\n- Returns median exon read counts, in tissues, of a collapsed gene model.\n- Results may be filtered by dataset, gene or tissue, but at least one gene must be provided\n\nBy default, this service queries the latest GTEx release.",
    "operation_id": "get_median_exon_expression_api_v2_expression_medianExonExpression_get",
    "tags": [
      "Expression Data Endpoints"
    ],
    "parameters": [
      {
        "name": "gencodeId",
        "location": "query",
        "required": true,
        "description": "A list of Versioned GENCODE IDs, e.g. ENSG00000065613.9,ENSG00000203782.5",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "maxItems": 60000,
          "description": "A list of Versioned GENCODE IDs, e.g. ENSG00000065613.9,ENSG00000203782.5",
          "title": "Gencodeid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "datasetId",
        "location": "query",
        "required": false,
        "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
        "schema": {
          "$ref": "#/components/schemas/DatasetId",
          "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
          "default": "gtex_v8"
        },
        "type": "",
        "default": "gtex_v8",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "tissueSiteDetailId",
        "location": "query",
        "required": false,
        "description": "A list of Tissue IDs of the tissue(s) of interest. Can be a GTEx specific ID or an Ontology ID",
        "schema": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TissueSiteDetailId"
              },
              {
                "$ref": "#/components/schemas/TissueSiteOntologyId"
              }
            ]
          },
          "description": "A list of Tissue IDs of the tissue(s) of interest. Can be a GTEx specific ID or an Ontology ID",
          "title": "Tissuesitedetailid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "page",
        "location": "query",
        "required": false,
        "description": "The 0-based numeric ID of the page to retrieve",
        "schema": {
          "type": "integer",
          "maximum": 1000000,
          "minimum": 0,
          "description": "The 0-based numeric ID of the page to retrieve",
          "default": 0,
          "title": "Page"
        },
        "type": "integer",
        "default": 0,
        "minimum": 0,
        "maximum": 1000000,
        "enum": []
      },
      {
        "name": "itemsPerPage",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "integer",
          "maximum": 100000,
          "minimum": 1,
          "default": 250,
          "title": "Itemsperpage"
        },
        "type": "integer",
        "default": 250,
        "minimum": 1,
        "maximum": 100000,
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/PaginatedResponse_MedianExonExpression_"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/expression/clusteredMedianExonExpression",
    "method": "GET",
    "summary": "Get Clustered Median Exon Expression",
    "description": "Find median transcript expression data along with hierarchical clusters .\n\n- Returns median normalized transcript expression in tissues of all known transcripts of a given gene along with the\nhierarchical clustering results of tissues and transcripts, based on exon expression, in Newick format.\n- The hierarchical clustering is performed by calculating Euclidean distances and using the average linkage method.\n- **This endpoint is not paginated.**\n\nBy default, this endpoint queries the latest GTEx release.",
    "operation_id": "get_clustered_median_exon_expression_api_v2_expression_clusteredMedianExonExpression_get",
    "tags": [
      "Expression Data Endpoints"
    ],
    "parameters": [
      {
        "name": "gencodeId",
        "location": "query",
        "required": true,
        "description": "A list of Versioned GENCODE IDs, e.g. ENSG00000065613.9,ENSG00000203782.5",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "maxItems": 60000,
          "description": "A list of Versioned GENCODE IDs, e.g. ENSG00000065613.9,ENSG00000203782.5",
          "title": "Gencodeid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "datasetId",
        "location": "query",
        "required": false,
        "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
        "schema": {
          "$ref": "#/components/schemas/DatasetId",
          "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
          "default": "gtex_v8"
        },
        "type": "",
        "default": "gtex_v8",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "tissueSiteDetailId",
        "location": "query",
        "required": false,
        "description": "A list of Tissue IDs of the tissue(s) of interest. Can be a GTEx specific ID or an Ontology ID",
        "schema": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TissueSiteDetailId"
              },
              {
                "$ref": "#/components/schemas/TissueSiteOntologyId"
              }
            ]
          },
          "description": "A list of Tissue IDs of the tissue(s) of interest. Can be a GTEx specific ID or an Ontology ID",
          "title": "Tissuesitedetailid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/ClusteredMedianExonExpression"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/expression/medianGeneExpression",
    "method": "GET",
    "summary": "Get Median Gene Expression",
    "description": "Find median gene expression data along with hierarchical clusters .\n\n- Returns median gene  expression in tissues.\n\nBy default, this endpoint queries the latest GTEx release.",
    "operation_id": "get_median_gene_expression_api_v2_expression_medianGeneExpression_get",
    "tags": [
      "Expression Data Endpoints"
    ],
    "parameters": [
      {
        "name": "gencodeId",
        "location": "query",
        "required": true,
        "description": "A list of Versioned GENCODE IDs, e.g. ENSG00000065613.9,ENSG00000203782.5",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "maxItems": 60000,
          "description": "A list of Versioned GENCODE IDs, e.g. ENSG00000065613.9,ENSG00000203782.5",
          "title": "Gencodeid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "datasetId",
        "location": "query",
        "required": false,
        "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
        "schema": {
          "$ref": "#/components/schemas/DatasetId",
          "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
          "default": "gtex_v8"
        },
        "type": "",
        "default": "gtex_v8",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "tissueSiteDetailId",
        "location": "query",
        "required": false,
        "description": "A list of Tissue IDs of the tissue(s) of interest. Can be a GTEx specific ID or an Ontology ID",
        "schema": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TissueSiteDetailId"
              },
              {
                "$ref": "#/components/schemas/TissueSiteOntologyId"
              }
            ]
          },
          "description": "A list of Tissue IDs of the tissue(s) of interest. Can be a GTEx specific ID or an Ontology ID",
          "title": "Tissuesitedetailid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "page",
        "location": "query",
        "required": false,
        "description": "The 0-based numeric ID of the page to retrieve",
        "schema": {
          "type": "integer",
          "maximum": 1000000,
          "minimum": 0,
          "description": "The 0-based numeric ID of the page to retrieve",
          "default": 0,
          "title": "Page"
        },
        "type": "integer",
        "default": 0,
        "minimum": 0,
        "maximum": 1000000,
        "enum": []
      },
      {
        "name": "itemsPerPage",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "integer",
          "maximum": 100000,
          "minimum": 1,
          "default": 250,
          "title": "Itemsperpage"
        },
        "type": "integer",
        "default": 250,
        "minimum": 1,
        "maximum": 100000,
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/PaginatedResponse_MedianGeneExpression_"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/expression/clusteredMedianGeneExpression",
    "method": "GET",
    "summary": "Get Clustered Median Gene Expression",
    "description": "Find median gene expression data along with hierarchical clusters .\n\n- Returns median gene expression in tissues along with The hierarchical clustering results of tissues and genes,\nbased on gene expression, in Newick format.\n- Results may be filtered by dataset, gene or tissue, but at least one gene must be provided\n- The hierarchical clustering is performed by calculating Euclidean distances and using the average linkage method.\n- **This endpoint is not paginated.**\n\nBy default, this service queries the latest GTEx release.",
    "operation_id": "get_clustered_median_gene_expression_api_v2_expression_clusteredMedianGeneExpression_get",
    "tags": [
      "Expression Data Endpoints"
    ],
    "parameters": [
      {
        "name": "gencodeId",
        "location": "query",
        "required": true,
        "description": "A list of Versioned GENCODE IDs, e.g. ENSG00000065613.9,ENSG00000203782.5",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "maxItems": 60000,
          "description": "A list of Versioned GENCODE IDs, e.g. ENSG00000065613.9,ENSG00000203782.5",
          "title": "Gencodeid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "datasetId",
        "location": "query",
        "required": false,
        "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
        "schema": {
          "$ref": "#/components/schemas/DatasetId",
          "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
          "default": "gtex_v8"
        },
        "type": "",
        "default": "gtex_v8",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "tissueSiteDetailId",
        "location": "query",
        "required": false,
        "description": "A list of Tissue IDs of the tissue(s) of interest. Can be a GTEx specific ID or an Ontology ID",
        "schema": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TissueSiteDetailId"
              },
              {
                "$ref": "#/components/schemas/TissueSiteOntologyId"
              }
            ]
          },
          "description": "A list of Tissue IDs of the tissue(s) of interest. Can be a GTEx specific ID or an Ontology ID",
          "title": "Tissuesitedetailid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/ClusteredMedianGeneExpression"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/expression/medianJunctionExpression",
    "method": "GET",
    "summary": "Get Median Junction Expression",
    "description": "Find junction gene expression data.\n\n- Returns median junction read counts in tissues of a given gene from all known transcripts.\n- Results may be filtered by dataset or tissue.\n\nBy default, this service queries the latest GTEx release.",
    "operation_id": "get_median_junction_expression_api_v2_expression_medianJunctionExpression_get",
    "tags": [
      "Expression Data Endpoints"
    ],
    "parameters": [
      {
        "name": "gencodeId",
        "location": "query",
        "required": true,
        "description": "A list of Versioned GENCODE IDs, e.g. ENSG00000065613.9,ENSG00000203782.5",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "maxItems": 60000,
          "description": "A list of Versioned GENCODE IDs, e.g. ENSG00000065613.9,ENSG00000203782.5",
          "title": "Gencodeid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "datasetId",
        "location": "query",
        "required": false,
        "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
        "schema": {
          "$ref": "#/components/schemas/DatasetId",
          "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
          "default": "gtex_v8"
        },
        "type": "",
        "default": "gtex_v8",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "tissueSiteDetailId",
        "location": "query",
        "required": false,
        "description": "A list of Tissue IDs of the tissue(s) of interest. Can be a GTEx specific ID or an Ontology ID",
        "schema": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TissueSiteDetailId"
              },
              {
                "$ref": "#/components/schemas/TissueSiteOntologyId"
              }
            ]
          },
          "description": "A list of Tissue IDs of the tissue(s) of interest. Can be a GTEx specific ID or an Ontology ID",
          "title": "Tissuesitedetailid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "page",
        "location": "query",
        "required": false,
        "description": "The 0-based numeric ID of the page to retrieve",
        "schema": {
          "type": "integer",
          "maximum": 1000000,
          "minimum": 0,
          "description": "The 0-based numeric ID of the page to retrieve",
          "default": 0,
          "title": "Page"
        },
        "type": "integer",
        "default": 0,
        "minimum": 0,
        "maximum": 1000000,
        "enum": []
      },
      {
        "name": "itemsPerPage",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "integer",
          "maximum": 100000,
          "minimum": 1,
          "default": 250,
          "title": "Itemsperpage"
        },
        "type": "integer",
        "default": 250,
        "minimum": 1,
        "maximum": 100000,
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/PaginatedResponse_MedianJunctionExpression_"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/expression/clusteredMedianJunctionExpression",
    "method": "GET",
    "summary": "Get Clustered Median Junction Expression",
    "description": "Find median junction expression data along with hierarchical clusters .\n\n-  Returns median junction read counts in tissues of a given gene from all known transcripts along with\nthe hierarchical clustering results of tissues and genes, based on junction expression, in Newick format.\n- Results may be filtered by dataset, gene or tissue, but at least one gene must be provided.\n- The hierarchical clustering is performed by calculating Euclidean distances and using the average linkage method.\n- **This endpoint is not paginated.**\n\nBy default, this service queries the latest GTEx release.",
    "operation_id": "get_clustered_median_junction_expression_api_v2_expression_clusteredMedianJunctionExpression_get",
    "tags": [
      "Expression Data Endpoints"
    ],
    "parameters": [
      {
        "name": "gencodeId",
        "location": "query",
        "required": true,
        "description": "A list of Versioned GENCODE IDs, e.g. ENSG00000065613.9,ENSG00000203782.5",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "maxItems": 60000,
          "description": "A list of Versioned GENCODE IDs, e.g. ENSG00000065613.9,ENSG00000203782.5",
          "title": "Gencodeid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "datasetId",
        "location": "query",
        "required": false,
        "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
        "schema": {
          "$ref": "#/components/schemas/DatasetId",
          "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
          "default": "gtex_v8"
        },
        "type": "",
        "default": "gtex_v8",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "tissueSiteDetailId",
        "location": "query",
        "required": false,
        "description": "A list of Tissue IDs of the tissue(s) of interest. Can be a GTEx specific ID or an Ontology ID",
        "schema": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TissueSiteDetailId"
              },
              {
                "$ref": "#/components/schemas/TissueSiteOntologyId"
              }
            ]
          },
          "description": "A list of Tissue IDs of the tissue(s) of interest. Can be a GTEx specific ID or an Ontology ID",
          "title": "Tissuesitedetailid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/ClusteredMedianJunctionExpression"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/expression/medianTranscriptExpression",
    "method": "GET",
    "summary": "Get Median Transcript Expression",
    "description": "Find median transcript expression data of all known transcripts of a gene.\n\n- Returns median normalized expression in tissues of all known transcripts of a given gene.\n- Results may be filtered by dataset or tissue.\n\n By default, this service queries the latest GTEx release.",
    "operation_id": "get_median_transcript_expression_api_v2_expression_medianTranscriptExpression_get",
    "tags": [
      "Expression Data Endpoints"
    ],
    "parameters": [
      {
        "name": "gencodeId",
        "location": "query",
        "required": true,
        "description": "A list of Versioned GENCODE IDs, e.g. ENSG00000065613.9,ENSG00000203782.5",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "maxItems": 60000,
          "description": "A list of Versioned GENCODE IDs, e.g. ENSG00000065613.9,ENSG00000203782.5",
          "title": "Gencodeid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "datasetId",
        "location": "query",
        "required": false,
        "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
        "schema": {
          "$ref": "#/components/schemas/DatasetId",
          "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
          "default": "gtex_v8"
        },
        "type": "",
        "default": "gtex_v8",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "tissueSiteDetailId",
        "location": "query",
        "required": false,
        "description": "A list of Tissue IDs of the tissue(s) of interest. Can be a GTEx specific ID or an Ontology ID",
        "schema": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TissueSiteDetailId"
              },
              {
                "$ref": "#/components/schemas/TissueSiteOntologyId"
              }
            ]
          },
          "description": "A list of Tissue IDs of the tissue(s) of interest. Can be a GTEx specific ID or an Ontology ID",
          "title": "Tissuesitedetailid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "page",
        "location": "query",
        "required": false,
        "description": "The 0-based numeric ID of the page to retrieve",
        "schema": {
          "type": "integer",
          "maximum": 1000000,
          "minimum": 0,
          "description": "The 0-based numeric ID of the page to retrieve",
          "default": 0,
          "title": "Page"
        },
        "type": "integer",
        "default": 0,
        "minimum": 0,
        "maximum": 1000000,
        "enum": []
      },
      {
        "name": "itemsPerPage",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "integer",
          "maximum": 100000,
          "minimum": 1,
          "default": 250,
          "title": "Itemsperpage"
        },
        "type": "integer",
        "default": 250,
        "minimum": 1,
        "maximum": 100000,
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/PaginatedResponse_MedianTranscriptExpression_"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/expression/clusteredMedianTranscriptExpression",
    "method": "GET",
    "summary": "Get Clustered Median Transcript Expression",
    "description": "Find median transcript expression data of all known transcripts of a gene along with hierarchical clusters .\n\n-   Returns median normalized expression in tissues of all known transcripts of a given gene along with\nthe hierarchical clustering results of tissues and genes, based on expression, in Newick format.\n- Results may be filtered by dataset, gene or tissue, but at least one gene must be provided.\n- The hierarchical clustering is performed by calculating Euclidean distances and using the average linkage method.\n- **This endpoint is not paginated.**\n\nBy default, this service queries the latest GTEx release.",
    "operation_id": "get_clustered_median_transcript_expression_api_v2_expression_clusteredMedianTranscriptExpression_get",
    "tags": [
      "Expression Data Endpoints"
    ],
    "parameters": [
      {
        "name": "gencodeId",
        "location": "query",
        "required": true,
        "description": "A list of Versioned GENCODE IDs, e.g. ENSG00000065613.9,ENSG00000203782.5",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "maxItems": 60000,
          "description": "A list of Versioned GENCODE IDs, e.g. ENSG00000065613.9,ENSG00000203782.5",
          "title": "Gencodeid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "datasetId",
        "location": "query",
        "required": false,
        "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
        "schema": {
          "$ref": "#/components/schemas/DatasetId",
          "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
          "default": "gtex_v8"
        },
        "type": "",
        "default": "gtex_v8",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "tissueSiteDetailId",
        "location": "query",
        "required": false,
        "description": "A list of Tissue IDs of the tissue(s) of interest. Can be a GTEx specific ID or an Ontology ID",
        "schema": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TissueSiteDetailId"
              },
              {
                "$ref": "#/components/schemas/TissueSiteOntologyId"
              }
            ]
          },
          "description": "A list of Tissue IDs of the tissue(s) of interest. Can be a GTEx specific ID or an Ontology ID",
          "title": "Tissuesitedetailid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/ClusteredMedianTranscriptExpression"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/expression/singleNucleusGeneExpression",
    "method": "GET",
    "summary": "Get Single Nucleus Gex",
    "description": "Retrieve Single Nucleus Gene Expression Data for a given Gene.",
    "operation_id": "get_single_nucleus_gex_api_v2_expression_singleNucleusGeneExpression_get",
    "tags": [
      "Expression Data Endpoints"
    ],
    "parameters": [
      {
        "name": "gencodeId",
        "location": "query",
        "required": true,
        "description": "A list of Versioned GENCODE IDs, e.g. ENSG00000065613.9,ENSG00000203782.5",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "maxItems": 60000,
          "description": "A list of Versioned GENCODE IDs, e.g. ENSG00000065613.9,ENSG00000203782.5",
          "title": "Gencodeid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "datasetId",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "$ref": "#/components/schemas/DatasetId",
          "default": "gtex_snrnaseq_pilot"
        },
        "type": "",
        "default": "gtex_snrnaseq_pilot",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "tissueSiteDetailId",
        "location": "query",
        "required": false,
        "description": "A list of Tissue IDs of the tissue(s) of interest. Can be a GTEx specific ID or an Ontology ID",
        "schema": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TissueSiteDetailId"
              },
              {
                "$ref": "#/components/schemas/TissueSiteOntologyId"
              }
            ]
          },
          "description": "A list of Tissue IDs of the tissue(s) of interest. Can be a GTEx specific ID or an Ontology ID",
          "title": "Tissuesitedetailid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "excludeDataArray",
        "location": "query",
        "required": false,
        "description": "Include Expression Values in Result. Set to `false` to include the data array",
        "schema": {
          "type": "boolean",
          "description": "Include Expression Values in Result. Set to `false` to include the data array",
          "default": true,
          "title": "Excludedataarray"
        },
        "type": "boolean",
        "default": true,
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "page",
        "location": "query",
        "required": false,
        "description": "The 0-based numeric ID of the page to retrieve",
        "schema": {
          "type": "integer",
          "maximum": 1000000,
          "minimum": 0,
          "description": "The 0-based numeric ID of the page to retrieve",
          "default": 0,
          "title": "Page"
        },
        "type": "integer",
        "default": 0,
        "minimum": 0,
        "maximum": 1000000,
        "enum": []
      },
      {
        "name": "itemsPerPage",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "integer",
          "maximum": 100000,
          "minimum": 1,
          "default": 250,
          "title": "Itemsperpage"
        },
        "type": "integer",
        "default": 250,
        "minimum": 1,
        "maximum": 100000,
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/PaginatedResponse_SingleNucleusGeneExpressionResult_"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/expression/singleNucleusGeneExpressionSummary",
    "method": "GET",
    "summary": "Get Single Nucleus Gex Summary",
    "description": "Retrieve Summarized Single Nucleus Gene Expression Data.",
    "operation_id": "get_single_nucleus_gex_summary_api_v2_expression_singleNucleusGeneExpressionSummary_get",
    "tags": [
      "Expression Data Endpoints"
    ],
    "parameters": [
      {
        "name": "datasetId",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "$ref": "#/components/schemas/DatasetId",
          "default": "gtex_snrnaseq_pilot"
        },
        "type": "",
        "default": "gtex_snrnaseq_pilot",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "tissueSiteDetailId",
        "location": "query",
        "required": false,
        "description": "A list of Tissue IDs of the tissue(s) of interest. Can be a GTEx specific ID or an Ontology ID",
        "schema": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TissueSiteDetailId"
              },
              {
                "$ref": "#/components/schemas/TissueSiteOntologyId"
              }
            ]
          },
          "description": "A list of Tissue IDs of the tissue(s) of interest. Can be a GTEx specific ID or an Ontology ID",
          "title": "Tissuesitedetailid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "page",
        "location": "query",
        "required": false,
        "description": "The 0-based numeric ID of the page to retrieve",
        "schema": {
          "type": "integer",
          "maximum": 1000000,
          "minimum": 0,
          "description": "The 0-based numeric ID of the page to retrieve",
          "default": 0,
          "title": "Page"
        },
        "type": "integer",
        "default": 0,
        "minimum": 0,
        "maximum": 1000000,
        "enum": []
      },
      {
        "name": "itemsPerPage",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "integer",
          "maximum": 100000,
          "minimum": 1,
          "default": 250,
          "title": "Itemsperpage"
        },
        "type": "integer",
        "default": 250,
        "minimum": 1,
        "maximum": 100000,
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/PaginatedResponse_SingleNucleusGeneExpressionSummary_"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/expression/topExpressedGene",
    "method": "GET",
    "summary": "Get Top Expressed Genes",
    "description": "Find top expressed genes for a specified tissue.\n\n- Returns top expressed genes for a specified tissue in a dataset, sorted by median expression.\n- When the optional parameter `filterMtGene` is set to true, mitochondrial genes will be excluded from the results.\n\nBy default, this service queries the latest GTEx release.",
    "operation_id": "get_top_expressed_genes_api_v2_expression_topExpressedGene_get",
    "tags": [
      "Expression Data Endpoints"
    ],
    "parameters": [
      {
        "name": "tissueSiteDetailId",
        "location": "query",
        "required": true,
        "description": "The ID of the tissue of interest. Can be a GTEx specific ID or an Ontology ID",
        "schema": {
          "anyOf": [
            {
              "$ref": "#/components/schemas/TissueSiteDetailId"
            },
            {
              "$ref": "#/components/schemas/TissueSiteOntologyId"
            }
          ],
          "description": "The ID of the tissue of interest. Can be a GTEx specific ID or an Ontology ID",
          "title": "Tissuesitedetailid"
        },
        "type": "",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "datasetId",
        "location": "query",
        "required": false,
        "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
        "schema": {
          "$ref": "#/components/schemas/DatasetId",
          "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
          "default": "gtex_v8"
        },
        "type": "",
        "default": "gtex_v8",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "filterMtGene",
        "location": "query",
        "required": false,
        "description": "exclude mt genes",
        "schema": {
          "type": "boolean",
          "description": "exclude mt genes",
          "default": true,
          "title": "Filtermtgene"
        },
        "type": "boolean",
        "default": true,
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "page",
        "location": "query",
        "required": false,
        "description": "The 0-based numeric ID of the page to retrieve",
        "schema": {
          "type": "integer",
          "maximum": 1000000,
          "minimum": 0,
          "description": "The 0-based numeric ID of the page to retrieve",
          "default": 0,
          "title": "Page"
        },
        "type": "integer",
        "default": 0,
        "minimum": 0,
        "maximum": 1000000,
        "enum": []
      },
      {
        "name": "itemsPerPage",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "integer",
          "maximum": 100000,
          "minimum": 1,
          "default": 250,
          "title": "Itemsperpage"
        },
        "type": "integer",
        "default": 250,
        "minimum": 1,
        "maximum": 100000,
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/PaginatedResponse_TopExpressedGenes_"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/histology/image",
    "method": "GET",
    "summary": "Get Image",
    "description": "",
    "operation_id": "get_image_api_v2_histology_image_get",
    "tags": [
      "Histology Endpoints"
    ],
    "parameters": [
      {
        "name": "tissueSampleId",
        "location": "query",
        "required": false,
        "description": "A list of Tissue Sample ID(s)",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of Tissue Sample ID(s)",
          "title": "Tissuesampleid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "page",
        "location": "query",
        "required": false,
        "description": "The 0-based numeric ID of the page to retrieve",
        "schema": {
          "type": "integer",
          "maximum": 1000000,
          "minimum": 0,
          "description": "The 0-based numeric ID of the page to retrieve",
          "default": 0,
          "title": "Page"
        },
        "type": "integer",
        "default": 0,
        "minimum": 0,
        "maximum": 1000000,
        "enum": []
      },
      {
        "name": "itemsPerPage",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "integer",
          "maximum": 100000,
          "minimum": 1,
          "default": 250,
          "title": "Itemsperpage"
        },
        "type": "integer",
        "default": 250,
        "minimum": 1,
        "maximum": 100000,
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/PaginatedResponse_HistologySample_"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/metadata/dataset",
    "method": "GET",
    "summary": "Get Dataset Info",
    "description": "",
    "operation_id": "get_dataset_info_api_v2_metadata_dataset_get",
    "tags": [
      "Metadata Endpoints"
    ],
    "parameters": [
      {
        "name": "datasetId",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "$ref": "#/components/schemas/DatasetId"
        },
        "type": "",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "organizationName",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "$ref": "#/components/schemas/OrganizationNames"
        },
        "type": "",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Dataset"
              },
              "title": "Response Get Dataset Info Api V2 Metadata Dataset Get"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/reference/exon",
    "method": "GET",
    "summary": "Get Exons",
    "description": "This service returns exons from all known transcripts of the given gene.\n - A versioned GENCODE ID is required to ensure that all exons are from a single gene.\n - A dataset ID or both GENCODE version and genome build must be provided.\n - Although annotated exons are not dataset dependent,\nspecifying a dataset here is equivalent to specifying the GENCODE version and genome build used by that dataset.",
    "operation_id": "get_exons_api_v2_reference_exon_get",
    "tags": [
      "Reference Genome Endpoints"
    ],
    "parameters": [
      {
        "name": "gencodeId",
        "location": "query",
        "required": true,
        "description": "A list of Versioned GENCODE IDs, e.g. ENSG00000065613.9,ENSG00000203782.5",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "maxItems": 60000,
          "description": "A list of Versioned GENCODE IDs, e.g. ENSG00000065613.9,ENSG00000203782.5",
          "title": "Gencodeid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "gencodeVersion",
        "location": "query",
        "required": false,
        "description": "GENCODE annotation release.",
        "schema": {
          "$ref": "#/components/schemas/GencodeVersion",
          "description": "GENCODE annotation release."
        },
        "type": "",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "genomeBuild",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "$ref": "#/components/schemas/GenomeBuild"
        },
        "type": "",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "datasetId",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "$ref": "#/components/schemas/DatasetId"
        },
        "type": "",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "page",
        "location": "query",
        "required": false,
        "description": "The 0-based numeric ID of the page to retrieve",
        "schema": {
          "type": "integer",
          "maximum": 1000000,
          "minimum": 0,
          "description": "The 0-based numeric ID of the page to retrieve",
          "default": 0,
          "title": "Page"
        },
        "type": "integer",
        "default": 0,
        "minimum": 0,
        "maximum": 1000000,
        "enum": []
      },
      {
        "name": "itemsPerPage",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "integer",
          "maximum": 100000,
          "minimum": 1,
          "default": 250,
          "title": "Itemsperpage"
        },
        "type": "integer",
        "default": 250,
        "minimum": 1,
        "maximum": 100000,
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/PaginatedResponse_Exon_"
            }
          }
        ]
      },
      {
        "status_code": "400",
        "description": "Illegal query input",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/Message"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/reference/features/{featureId}",
    "method": "GET",
    "summary": "Get Genomic Features",
    "description": "",
    "operation_id": "get_genomic_features_api_v2_reference_features__featureId__get",
    "tags": [
      "Reference Genome Endpoints"
    ],
    "parameters": [
      {
        "name": "featureId",
        "location": "path",
        "required": true,
        "description": "",
        "schema": {
          "type": "string",
          "title": "Featureid"
        },
        "type": "string",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "datasetId",
        "location": "query",
        "required": false,
        "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
        "schema": {
          "$ref": "#/components/schemas/DatasetId",
          "description": "Unique identifier of a dataset. Usually includes a data source and data release.",
          "default": "gtex_v8"
        },
        "type": "",
        "default": "gtex_v8",
        "minimum": "",
        "maximum": "",
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/Feature"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/reference/geneSearch",
    "method": "GET",
    "summary": "Get Gene Search",
    "description": "Find genes that are partial or complete match of a gene_id\n - gene_id could be a gene symbol, a gencode ID, or an Ensemble ID\n - Gencode Version and Genome Build must be specified",
    "operation_id": "get_gene_search_api_v2_reference_geneSearch_get",
    "tags": [
      "Reference Genome Endpoints"
    ],
    "parameters": [
      {
        "name": "geneId",
        "location": "query",
        "required": true,
        "description": "",
        "schema": {
          "type": "string",
          "minLength": 1,
          "title": "Geneid"
        },
        "type": "string",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "gencodeVersion",
        "location": "query",
        "required": false,
        "description": "GENCODE annotation release.",
        "schema": {
          "$ref": "#/components/schemas/GencodeVersion",
          "description": "GENCODE annotation release.",
          "default": "v26"
        },
        "type": "",
        "default": "v26",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "genomeBuild",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "$ref": "#/components/schemas/GenomeBuild",
          "default": "GRCh38/hg38"
        },
        "type": "",
        "default": "GRCh38/hg38",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "page",
        "location": "query",
        "required": false,
        "description": "The 0-based numeric ID of the page to retrieve",
        "schema": {
          "type": "integer",
          "maximum": 1000000,
          "minimum": 0,
          "description": "The 0-based numeric ID of the page to retrieve",
          "default": 0,
          "title": "Page"
        },
        "type": "integer",
        "default": 0,
        "minimum": 0,
        "maximum": 1000000,
        "enum": []
      },
      {
        "name": "itemsPerPage",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "integer",
          "maximum": 100000,
          "minimum": 1,
          "default": 250,
          "title": "Itemsperpage"
        },
        "type": "integer",
        "default": 250,
        "minimum": 1,
        "maximum": 100000,
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/PaginatedResponse_Gene_"
            }
          }
        ]
      },
      {
        "status_code": "400",
        "description": "Illegal query input",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/Message"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/reference/gene",
    "method": "GET",
    "summary": "Get Genes",
    "description": "This service returns information about reference genes. A genome build and GENCODE version must be provided.\n - Genes are searchable by gene symbol, GENCODE ID and versioned GENCODE ID.\n - Versioned GENCODE ID is recommended to ensure unique ID matching.\n - By default, this service queries the genome build and GENCODE version used by the latest GTEx release.",
    "operation_id": "get_genes_api_v2_reference_gene_get",
    "tags": [
      "Reference Genome Endpoints"
    ],
    "parameters": [
      {
        "name": "geneId",
        "location": "query",
        "required": true,
        "description": "A gene symbol, versioned gencodeId, or unversioned gencodeId.",
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          },
          "minItems": 1,
          "description": "A gene symbol, versioned gencodeId, or unversioned gencodeId.",
          "title": "Geneid"
        },
        "type": "array",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "gencodeVersion",
        "location": "query",
        "required": false,
        "description": "GENCODE annotation release.",
        "schema": {
          "$ref": "#/components/schemas/GencodeVersion",
          "description": "GENCODE annotation release.",
          "default": "v26"
        },
        "type": "",
        "default": "v26",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "genomeBuild",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "$ref": "#/components/schemas/GenomeBuild",
          "default": "GRCh38/hg38"
        },
        "type": "",
        "default": "GRCh38/hg38",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "page",
        "location": "query",
        "required": false,
        "description": "The 0-based numeric ID of the page to retrieve",
        "schema": {
          "type": "integer",
          "maximum": 1000000,
          "minimum": 0,
          "description": "The 0-based numeric ID of the page to retrieve",
          "default": 0,
          "title": "Page"
        },
        "type": "integer",
        "default": 0,
        "minimum": 0,
        "maximum": 1000000,
        "enum": []
      },
      {
        "name": "itemsPerPage",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "integer",
          "maximum": 100000,
          "minimum": 1,
          "default": 250,
          "title": "Itemsperpage"
        },
        "type": "integer",
        "default": 250,
        "minimum": 1,
        "maximum": 100000,
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/PaginatedResponse_Gene_"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/reference/gwasCatalogByLocation",
    "method": "GET",
    "summary": "Get Gwas Catalog By Location",
    "description": "Find the GWAS Catalog on a certain chromosome between start and end locations.",
    "operation_id": "get_gwas_catalog_by_location_api_v2_reference_gwasCatalogByLocation_get",
    "tags": [
      "Reference Genome Endpoints"
    ],
    "parameters": [
      {
        "name": "start",
        "location": "query",
        "required": true,
        "description": "",
        "schema": {
          "type": "integer",
          "maximum": 250000000,
          "minimum": 0,
          "title": "Start"
        },
        "type": "integer",
        "default": "",
        "minimum": 0,
        "maximum": 250000000,
        "enum": []
      },
      {
        "name": "end",
        "location": "query",
        "required": true,
        "description": "",
        "schema": {
          "type": "integer",
          "maximum": 250000000,
          "minimum": 0,
          "title": "End"
        },
        "type": "integer",
        "default": "",
        "minimum": 0,
        "maximum": 250000000,
        "enum": []
      },
      {
        "name": "chromosome",
        "location": "query",
        "required": true,
        "description": "",
        "schema": {
          "$ref": "#/components/schemas/Chromosome"
        },
        "type": "",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "page",
        "location": "query",
        "required": false,
        "description": "The 0-based numeric ID of the page to retrieve",
        "schema": {
          "type": "integer",
          "maximum": 1000000,
          "minimum": 0,
          "description": "The 0-based numeric ID of the page to retrieve",
          "default": 0,
          "title": "Page"
        },
        "type": "integer",
        "default": 0,
        "minimum": 0,
        "maximum": 1000000,
        "enum": []
      },
      {
        "name": "itemsPerPage",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "integer",
          "maximum": 100000,
          "minimum": 1,
          "default": 250,
          "title": "Itemsperpage"
        },
        "type": "integer",
        "default": 250,
        "minimum": 1,
        "maximum": 100000,
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/PaginatedResponse_GWAS_"
            }
          }
        ]
      },
      {
        "status_code": "400",
        "description": "Illegal query input",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/Message"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/reference/neighborGene",
    "method": "GET",
    "summary": "Get Neighbor Gene",
    "description": "Find all neighboring genes on a certain chromosome around a position with a certain window size.",
    "operation_id": "get_neighbor_gene_api_v2_reference_neighborGene_get",
    "tags": [
      "Reference Genome Endpoints"
    ],
    "parameters": [
      {
        "name": "pos",
        "location": "query",
        "required": true,
        "description": "",
        "schema": {
          "type": "integer",
          "maximum": 248945542,
          "minimum": 0,
          "title": "Pos"
        },
        "type": "integer",
        "default": "",
        "minimum": 0,
        "maximum": 248945542,
        "enum": []
      },
      {
        "name": "chromosome",
        "location": "query",
        "required": true,
        "description": "",
        "schema": {
          "$ref": "#/components/schemas/Chromosome"
        },
        "type": "",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "bp_window",
        "location": "query",
        "required": true,
        "description": "",
        "schema": {
          "type": "integer",
          "maximum": 248936581,
          "minimum": 0,
          "title": "Bp Window"
        },
        "type": "integer",
        "default": "",
        "minimum": 0,
        "maximum": 248936581,
        "enum": []
      },
      {
        "name": "page",
        "location": "query",
        "required": false,
        "description": "The 0-based numeric ID of the page to retrieve",
        "schema": {
          "type": "integer",
          "maximum": 1000000,
          "minimum": 0,
          "description": "The 0-based numeric ID of the page to retrieve",
          "default": 0,
          "title": "Page"
        },
        "type": "integer",
        "default": 0,
        "minimum": 0,
        "maximum": 1000000,
        "enum": []
      },
      {
        "name": "gencodeVersion",
        "location": "query",
        "required": false,
        "description": "GENCODE annotation release.",
        "schema": {
          "$ref": "#/components/schemas/GencodeVersion",
          "description": "GENCODE annotation release.",
          "default": "v26"
        },
        "type": "",
        "default": "v26",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "genomeBuild",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "$ref": "#/components/schemas/GenomeBuild",
          "default": "GRCh38/hg38"
        },
        "type": "",
        "default": "GRCh38/hg38",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "itemsPerPage",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "integer",
          "maximum": 100000,
          "minimum": 1,
          "default": 250,
          "title": "Itemsperpage"
        },
        "type": "integer",
        "default": 250,
        "minimum": 1,
        "maximum": 100000,
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/PaginatedResponse_Gene_"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  },
  {
    "path": "/api/v2/reference/transcript",
    "method": "GET",
    "summary": "Get Transcripts",
    "description": "Find all transcripts of a reference gene.\n\n- This service returns information about transcripts of the given versioned GENCODE ID.\n- A genome build and GENCODE version must be provided.\n- By default, this service queries the genome build and GENCODE version used by the latest GTEx release.",
    "operation_id": "get_transcripts_api_v2_reference_transcript_get",
    "tags": [
      "Reference Genome Endpoints"
    ],
    "parameters": [
      {
        "name": "gencodeId",
        "location": "query",
        "required": true,
        "description": "A Versioned GENCODE ID of a gene, e.g. ENSG00000065613.9",
        "schema": {
          "type": "string",
          "description": "A Versioned GENCODE ID of a gene, e.g. ENSG00000065613.9",
          "title": "Gencodeid"
        },
        "type": "string",
        "default": "",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "gencodeVersion",
        "location": "query",
        "required": false,
        "description": "GENCODE annotation release.",
        "schema": {
          "$ref": "#/components/schemas/GencodeVersion",
          "description": "GENCODE annotation release.",
          "default": "v26"
        },
        "type": "",
        "default": "v26",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "genomeBuild",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "$ref": "#/components/schemas/GenomeBuild",
          "default": "GRCh38/hg38"
        },
        "type": "",
        "default": "GRCh38/hg38",
        "minimum": "",
        "maximum": "",
        "enum": []
      },
      {
        "name": "page",
        "location": "query",
        "required": false,
        "description": "The 0-based numeric ID of the page to retrieve",
        "schema": {
          "type": "integer",
          "maximum": 1000000,
          "minimum": 0,
          "description": "The 0-based numeric ID of the page to retrieve",
          "default": 0,
          "title": "Page"
        },
        "type": "integer",
        "default": 0,
        "minimum": 0,
        "maximum": 1000000,
        "enum": []
      },
      {
        "name": "itemsPerPage",
        "location": "query",
        "required": false,
        "description": "",
        "schema": {
          "type": "integer",
          "maximum": 100000,
          "minimum": 1,
          "default": 250,
          "title": "Itemsperpage"
        },
        "type": "integer",
        "default": 250,
        "minimum": 1,
        "maximum": 100000,
        "enum": []
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "Successful Response",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/PaginatedResponse_Transcript_"
            }
          }
        ]
      },
      {
        "status_code": "422",
        "description": "Validation Error",
        "content_types": [
          {
            "type": "application/json",
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        ]
      }
    ],
    "deprecated": false
  }
]